<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Nuke.Tooling\Nuke.Tooling.csproj" />
    <ProjectReference Include="..\Nuke.Tooling.Generator\Nuke.Tooling.Generator.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NuGet.Packaging" Version="6.10.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- MSBuild and dependencies only acquired through MSBuild shall not make it into the final package -->
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.10.4" CopyLocal="false" Publish="false" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.Build.Framework" Version="17.10.4" CopyLocal="false" Publish="false" ExcludeAssets="runtime" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Nuke.MSBuildTasks.targets">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <Target Name="RemoveMicrosoftBuildDllsFromOutput" AfterTargets="ResolveReferences">
    <!--
    Don't place build dlls in the output dir or else the ContextAwareTask will resolve them
    and may not be able to cast the TaskHost to IBuildEngine
    -->
    <PropertyGroup>
      <NonCopyLocalPackageReferences Condition="'%(PackageReference.CopyLocal)' == 'false'">;@(PackageReference);</NonCopyLocalPackageReferences>
    </PropertyGroup>
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="$(NonCopyLocalPackageReferences.Contains(';%(ReferenceCopyLocalPaths.NuGetPackageId);'))" />
    </ItemGroup>
  </Target>

</Project>
