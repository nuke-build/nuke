{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "title": "Tool metadata schema file by NUKE",
  "definitions": {
    "DataClass": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the data class.",
          "type": "string",
          "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
        },
        "baseClass": {
          "description": "The base class to inherit from.",
          "type": "string"
        },
        "noExtensionMethods": {
          "description": "Skips appendig of extension methods.",
          "type": "boolean"
        },
        "noArguments": {
          "description": "Omits argument parsing.",
          "type": "boolean"
        },
        "properties": {
          "description": "Properties of the data class.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "Enumeration": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the enumeration.",
          "type": "string",
          "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
        },
        "values": {
          "description": "The enumeration values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "values"
      ]
    },
    "Property": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the property.",
          "type": "string",
          "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
        },
        "type": {
          "description": "Type of the property. I.e., bool, int, string, List<int>, Dictionary<string, object>, Lookup<string, int.>",
          "type": "string"
        },
        "assertion": {
          "description": "Automatic assertion.",
          "type": "string",
          "enum": [
            "NotNull",
            "File",
            "Directory",
            "FileOrNull",
            "DirectoryOrNull"
          ]
        },
        "format": {
          "description": "Argument formatting for the property. '{value}' is replaced by the value of the property.",
          "type": "string"
        },
        "itemFormat": {
          "description": "Item formatting for dictionaries. '{key}' and '{value}' are replaced accordingly.",
          "type": "string"
        },
        "noArgument": {
          "description": "Omits argument parsing.",
          "type": "boolean"
        },
        "customImpl": {
          "description": "Custom implementation of the property.",
          "type": "boolean"
        },
        "noExtensionMethod": {
          "description": "Skips appendig of extension methods.",
          "type": "boolean"
        },
        "separator": {
          "description": "Separator used for items of collection types.",
          "type": "string"
        },
        "disallowedCharacter": {
          "description": "Character that must be double-quoted.",
          "type": "string"
        },
        "quoteMultiple": {
          "description": "Specifies if list items should be double quoted.",
          "type": "boolean"
        },
        "default": {
          "description": "Default value that will be used if no value is given.",
          "type": "string"
        },
        "secret": {
          "description": "Specifies that the value is secret and should be hidden in output.",
          "type": "boolean"
        },
        "customValue": {
          "description": "Custom implementation of value presentation.",
          "type": "boolean"
        },
        "createOverload": {
          "description": "Specifies that an overload for the property should be created.",
          "type": "boolean"
        },
        "help": {
          "description": "Help text for the property.",
          "type": "string"
        },
        "delegates": {
          "description": "Dictionary delegates for named properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "SettingsClass": {
      "description": "The settings of the task.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the data class.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
        },
        "baseClass": {
          "description": "The base class to inherit from.",
          "type": "string"
        },
        "noExtensionMethods": {
          "description": "Skips appendig of extension methods.",
          "type": "boolean"
        },
        "noArguments": {
          "description": "Omits argument parsing.",
          "type": "boolean"
        },
        "properties": {
          "description": "Properties of the data class.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "Task": {
      "type": "object",
      "properties": {
        "help": {
          "description": "Help or introduction text to for the tool. Supports 'a-href', 'c', 'em', 'b', 'ul', 'li' and 'para' tags for better formatting.",
          "type": "string"
        },
        "postfix": {
          "description": "Postfix for the task alias.",
          "type": "string",
          "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
        },
        "returnType": {
          "description": "Return type of the task.",
          "type": "string"
        },
        "omitCommonProperties": {
          "description": "Skips appending of common task properties.",
          "type": "boolean"
        },
        "customStart": {
          "description": "Custom start implementation.",
          "type": "boolean"
        },
        "customAssertion": {
          "description": "Custom process assertion implementation.",
          "type": "boolean"
        },
        "definiteArgument": {
          "description": "Argument that will always be printed independently of any set property.",
          "type": "string"
        },
        "settingsClass": {
          "$ref": "#/definitions/SettingsClass"
        }
      },
      "required": [
        "settingsClass"
      ]
    }
  },
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string"
    },
    "license": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "references": {
      "description": "Contains all references on which this definition is based on. Allows checking for updates.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "name": {
      "description": "Name of the Tool.",
      "type": "string",
      "pattern": "^[A-Z][a-z]+(?:[A-Z0-9][a-z0-9]+)*$"
    },
    "officialUrl": {
      "description": "Url to the official website.",
      "type": "string",
      "format": "uri"
    },
    "help": {
      "description": "Help or introduction text to for the tool. Supports 'a-href', 'c', 'em', 'b', 'ul', 'li' and 'para' tags for better formatting.",
      "type": "string"
    },
    "packageId": {
      "description": "ID for the NuGet package.",
      "type": "string"
    },
    "packageExecutable": {
      "description": "Exact name of the main executable found in the './tools' folder. Case-sensitive.",
      "type": "string"
    },
    "environmentExecutable": {
      "description": "Exact name of the environment variable that contains the path to the executable.",
      "type": "string"
    },
    "pathExecutable": {
      "description": "Exact name of the executable that can be found via 'where' or 'which'.",
      "type": "string"
    },
    "customExecutable": {
      "description": "Defines that locating the executable is implemented customly.",
      "type": "boolean"
    },
    "tasks": {
      "description": "Help or introduction text to for the tool. Can contain HTML tags for better formatting.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Task"
      }
    },
    "commonTaskProperties": {
      "description": "Common properties for all tasks.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Property"
      }
    },
    "dataClasses": {
      "description": "Common used data classes.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataClass"
      }
    },
    "enumerations": {
      "description": "Used enumerations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Enumeration"
      }
    }
  },
  "required": [
    "name",
    "officialUrl",
    "tasks"
  ]
}