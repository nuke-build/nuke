{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.Tooling.Generator/schema.json",
  "references": [
    "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_pwsh?view=powershell-7.3"
  ],
  "name": "Pwsh",
  "officialUrl": "https://docs.microsoft.com/en-us/powershell/",
  "help": "PowerShell is a cross-platform task automation solution made up of a command-line shell, a scripting language, and a configuration management framework. PowerShell runs on Windows, Linux, and macOS.",
  "pathExecutable": "pwsh",
  "tasks": [
    {
      "settingsClass": {
        "properties": [
          {
            "name": "Version",
            "type": "bool",
            "format": "-Version",
            "help": "Displays the version of PowerShell. Additional parameters are ignored."
          },
          {
            "name": "NoLogo",
            "type": "bool",
            "format": "-NoLogo",
            "help": "Hides the copyright banner at startup."
          },
          {
            "name": "NoExit",
            "type": "bool",
            "format": "-NoExit",
            "help": "Does not exit after running startup commands."
          },
          {
            "name": "SingleThreadedApartment",
            "type": "bool",
            "format": "-Sta",
            "help": "Start PowerShell using a single-threaded apartment. This is the default. This switch is only available on the Windows platform."
          },
          {
            "name": "MultiThreadedApartment",
            "type": "bool",
            "format": "-Mta",
            "help": "Start PowerShell using a multi-threaded apartment. This switch is only available on Windows."
          },
          {
            "name": "NoProfile",
            "type": "bool",
            "format": "-NoProfile",
            "help": "Does not load the PowerShell profile."
          },
          {
            "name": "NoProfileLoadTime",
            "type": "bool",
            "format": "-NoProfileLoadTime",
            "help": "Hides the PowerShell profile load time text shown at startup when the load time exceeds 500 milliseconds."
          },
          {
            "name": "NonInteractive",
            "type": "bool",
            "format": "-NonInteractive",
            "help": "This switch is used to create sessions that shouldn't require user input. This is useful for scripts that run in scheduled tasks or CI/CD pipelines. Any attempts to use interactive features, like <c>Read-Host</c> or confirmation prompts, result in statement terminating errors rather than hanging."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "-Interactive",
            "help": "Present an interactive prompt to the user. Inverse for <c>NonInteractive</c> parameter."
          },
          {
            "name": "InputFormat",
            "type": "PwshInOutFormat",
            "format": "-InputFormat {value}",
            "help": "Describes the format of data sent to PowerShell. Valid values are <c>Text</c> (text strings) or <c>XML</c> (serialized CLIXML format)."
          },
          {
            "name": "OutputFormat",
            "type": "PwshInOutFormat",
            "format": "-OutputFormat {value}",
            "help": "Determines how output from PowerShell is formatted. Valid values are <c>Text</c>  (text strings) or <c>XML</c>  (serialized CLIXML format)."
          },
          {
            "name": "WindowStyle",
            "type": "PwshWindowStyle",
            "format": "-WindowStyle {value}",
            "help": "Sets the window style for the session. Valid values are <c>Normal</c>, <c>Minimized</c>, <c>Maximized</c> and <c>Hidden</c>."
          },
          {
            "name": "EncodedCommand",
            "type": "string",
            "format": "-EncodedCommand {value}",
            "help": "Accepts a base-64-encoded string version of a command. Use this parameter to submit commands to PowerShell that require complex quotation marks or curly braces. The string must be formatted using UTF-16LE character encoding."
          },
          {
            "name": "ConfigurationName",
            "type": "string",
            "format": "-ConfigurationName {value}",
            "help": "Specifies a configuration endpoint in which PowerShell is run. This can be any endpoint registered on the local machine including the default PowerShell remoting endpoints or a custom endpoint having specific user role capabilities."
          },
          {
            "name": "ExecutionPolicy",
            "type": "PwshExecutionPolicy",
            "format": "-ExecutionPolicy {value}",
            "help": "Sets the default execution policy for the current session and saves it in the <c>$env:PSExecutionPolicyPreference</c> environment variable. This parameter does not change the PowerShell execution policy that is set in the registry. This parameter only applies to Windows computers. The <c>$env:PSExecutionPolicyPreference</c> environment variable does not exist on non-Windows platforms."
          },
          {
            "name": "File",
            "type": "string",
            "format": "-File  {value}",
            "position": 1,
            "help": "If the value of File is <c>-</c>, the command text is read from standard input. Running <c>pwsh -File -</c> without redirected standard input starts a regular session. This is the same as not specifying the File parameter at all.<para/>This is the default parameter if no parameters are present but values are present in the command line. The specified script runs in the local scope (\"dot-sourced\"), so that the functions and variables that the script creates are available in the current session. Enter the script file path and any parameters. File must be the last parameter in the command, because all characters typed after the File parameter name are interpreted as the script file path followed by the script parameters."
          },
          {
            "name": "FileArguments",
            "type": "List<string>",
            "format": "{value}",
            "position": 2,
            "help": "Arguments passed in when using the <c>-File</c> option."
          },
          {
            "name": "Command",
            "type": "string",
            "format": "-Command {value}",
            "help": "Executes the specified commands (and any parameters) as though they were typed at the PowerShell command prompt, and then exits, unless the <c>NoExit</c> parameter is specified.<para/>The value of Command can be <c>-</c>, a script block, or a string. If the value of Command is <c>-</c>, the command text is read from standard input.<para/>The Command parameter only accepts a script block for execution when it can recognize the value passed to Command as a ScriptBlock type. This is only possible when running pwsh from another PowerShell host. The ScriptBlock type may be contained in an existing variable, returned from an expression, or parsed by the PowerShell host as a literal script block enclosed in curly braces (<c>{}</c>), before being passed to pwsh."
          },
          {
            "name": "SettingsFile",
            "type": "string",
            "format": "-SettingsFile {value}",
            "help": "Overrides the system-wide <c>powershell.config.json</c> settings file for the session. By default, system-wide settings are read from the powershell.config.json in the $PSHOME directory. Note that these settings are not used by the endpoint specified by the <c>-ConfigurationName</c> argument."
          },
          {
            "name": "CustomPipeName",
            "type": "string",
            "format": "-CustomPipeName {value}",
            "help": "Specifies the name to use for an additional IPC server (named pipe) used for debugging and other cross-process communication. This offers a predictable mechanism for connecting to other PowerShell instances. Typically used with the CustomPipeName parameter on Enter-PSHostProcess. This parameter was introduced in PowerShell 6.2."
          },
          {
            "name": "SSHServerMode",
            "type": "bool",
            "format": "-SSHServerMode",
            "help": "Used in sshd_config for running PowerShell as an SSH subsystem. It is not intended or supported for any other use."
          },
          {
            "name": "WorkingDirectory",
            "type": "string",
            "format": "-WorkingDirectory {value}",
            "help": "Sets the initial working directory by executing at startup. Any valid PowerShell file path is supported. To start PowerShell in your home directory, use: <c>pwsh -WorkingDirectory ~</c>"
          },
          {
            "name": "ConfigurationFile",
            "type": "string",
            "format": "-ConfigurationFile {value}",
            "help": "Specifies a session configuration (.pssc) file path. The configuration contained in the configuration file will be applied to the PowerShell session."
          },
          {
            "name": "Login",
            "type": "bool",
            "format": "-Login",
            "help": "On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to execute login profiles such as /etc/profile and ~/.profile. On Windows, this switch does nothing. IMPORTANT This parameter must come first to start PowerShell as a login shell. Passing this parameter in another position will be ignored."
          }
        ]
      }
    }
  ],
  "enumerations": [
    {
      "name": "PwshExecutionPolicy",
      "values": [
        "AllSigned",
        "Bypass",
        "Default",
        "RemoteSigned",
        "Restricted",
        "Undefined",
        "Unrestricted"
      ]
    },
    {
      "name": "PwshInOutFormat",
      "values": [
        "Text",
        "Xml"
      ]
    },
    {
      "name": "PwshWindowStyle",
      "values": [
        "Normal",
        "Minimized",
        "Maximized",
        "Hidden"
      ]
    }
  ]
}
