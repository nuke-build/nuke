# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [TestGitHubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_test --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: test

on:
  push:
    branches:
      - push_branch
    tags:
      - 'push_tag/*'
    paths:
      - push_include_path
      - '!push_exclude_path'
  pull_request:
    branches:
      - pull_request_branch
    tags:
      - pull_request_tag
    paths:
      - pull_request_include_path
      - '!pull_request_exclude_path/**'
  workflow_dispatch:
    inputs:
      OptionalInput:
        description: "Optional Input"
        required: false
      RequiredInput:
        description: "Required Input"
        required: true
  schedule:
    - cron: '* 0 * * *'

jobs:
  macos-latest:
    name: macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 2
      - name: Cache .nuke/temp, ~/.nuget/packages
        uses: actions/cache@v2
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
      - name: Run './build.cmd Test'
        run: ./build.cmd Test
        env:
          OptionalInput: ${{ github.event.inputs.OptionalInput }}
          RequiredInput: ${{ github.event.inputs.RequiredInput }}
      - uses: actions/upload-artifact@v1
        with:
          name: src
          path: src
      - uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: output/test-results
      - uses: actions/upload-artifact@v1
        with:
          name: coverage-report.zip
          path: output/coverage-report.zip
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 2
      - name: Cache .nuke/temp, ~/.nuget/packages
        uses: actions/cache@v2
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
      - name: Run './build.cmd Test'
        run: ./build.cmd Test
        env:
          OptionalInput: ${{ github.event.inputs.OptionalInput }}
          RequiredInput: ${{ github.event.inputs.RequiredInput }}
      - uses: actions/upload-artifact@v1
        with:
          name: src
          path: src
      - uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: output/test-results
      - uses: actions/upload-artifact@v1
        with:
          name: coverage-report.zip
          path: output/coverage-report.zip
  windows-latest:
    name: windows-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 2
      - name: Cache .nuke/temp, ~/.nuget/packages
        uses: actions/cache@v2
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
      - name: Run './build.cmd Test'
        run: ./build.cmd Test
        env:
          OptionalInput: ${{ github.event.inputs.OptionalInput }}
          RequiredInput: ${{ github.event.inputs.RequiredInput }}
      - uses: actions/upload-artifact@v1
        with:
          name: src
          path: src
      - uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: output/test-results
      - uses: actions/upload-artifact@v1
        with:
          name: coverage-report.zip
          path: output/coverage-report.zip
