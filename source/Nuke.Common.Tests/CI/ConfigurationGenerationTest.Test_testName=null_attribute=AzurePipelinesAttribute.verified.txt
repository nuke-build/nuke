# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [TestAzurePipelines (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration AzurePipelines --host AzurePipelines
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: test_build

variables:
  - group: variable-group-1

parameters:
  - name: Configuration
    displayName: Configuration for compilation
    type: string
    default: Debug
  - name: ConfigurationArray
    type: string
    default: Debug Release
  - name: IgnoreFailedSources
    type: boolean
    default: false
  - name: IntegerArray
    type: number
    default: 1 2
  - name: Source
    displayName: NuGet Source for Packages
    type: string
    default: https://api.nuget.org/v3/index.json
  - name: StringArray
    type: string
    default: first second
  - name: Verbosity
    displayName: Logging verbosity during build execution. Default is 'Normal'.
    type: string
    default: Normal

trigger:
  batch: true
  branches:
    include:
      - included_branch
    exclude:
      - excluded_branch
  tags:
    include:
      - included_tags
    exclude:
      - excluded_tags
  paths:
    include:
      - included_path
    exclude:
      - excluded_path

stages:
  - stage: ubuntu_18_04
    displayName: 'ubuntu-18.04'
    dependsOn: [  ]
    pool:
      vmImage: 'ubuntu-18.04'
    jobs:
      - job: Restore
        displayName: 'Restore'
        dependsOn: [  ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: src
              pathtoPublish: 'src'
      - job: Compile
        displayName: 'Compile'
        dependsOn: [ Restore ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Compile --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: src
              pathtoPublish: 'src'
      - job: Test
        displayName: 'Test'
        dependsOn: [ Compile ]
        strategy:
          parallel: 2
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Test --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}}) --partition $(System.JobPositionInPhase)/2'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'output/test-results'
      - job: Coverage
        displayName: 'Coverage'
        dependsOn: [ Test ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(HOME)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Coverage --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: coverage-report.zip
              pathtoPublish: 'output/coverage-report.zip'
  - stage: windows_2019
    displayName: 'windows-2019'
    dependsOn: [  ]
    pool:
      vmImage: 'windows-2019'
    jobs:
      - job: Restore
        displayName: 'Restore'
        dependsOn: [  ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Restore --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: src
              pathtoPublish: 'src'
      - job: Compile
        displayName: 'Compile'
        dependsOn: [ Restore ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Compile --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: src
              pathtoPublish: 'src'
      - job: Test
        displayName: 'Test'
        dependsOn: [ Compile ]
        strategy:
          parallel: 2
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Test --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}}) --partition $(System.JobPositionInPhase)/2'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: test-results
              pathtoPublish: 'output/test-results'
      - job: Coverage
        displayName: 'Coverage'
        dependsOn: [ Test ]
        steps:
          - checkout: self
            lfs: false
            submodules: true
            fetchDepth: 1
            clean: true
          - task: Cache@2
            displayName: Cache (nuke-temp)
            inputs:
              key: $(Agent.OS) | nuke-temp | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuke-temp
              path: .nuke/temp
          - task: Cache@2
            displayName: Cache (nuget-packages)
            inputs:
              key: $(Agent.OS) | nuget-packages | **/global.json, **/*.csproj
              restoreKeys: $(Agent.OS) | nuget-packages
              path: $(USERPROFILE)/.nuget/packages
          - task: CmdLine@2
            inputs:
              script: './build.cmd Coverage --skip --Configuration ${{Configuration}}) --ConfigurationArray ${{ConfigurationArray}}) --IgnoreFailedSources ${{IgnoreFailedSources}}) --IntegerArray ${{IntegerArray}}) --Source ${{Source}}) --StringArray ${{StringArray}}) --Verbosity ${{Verbosity}})'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
              ApiKey: $(ApiKey)
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: coverage-report.zip
              pathtoPublish: 'output/coverage-report.zip'
