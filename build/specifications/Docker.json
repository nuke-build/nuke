{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "references": [
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_config_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_load.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_top.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_pull.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_sign.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_checkpoint.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_signer.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_config_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_key_generate.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_system.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_config_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack_services.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_port.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_rename.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_tag.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_secret_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_secret.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_export.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_history.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_ps.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stop.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_system_info.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_upgrade.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_builder_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_join-token.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_signer_add.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_logs.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_unlock.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_build.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_revoke.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_rmi.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_version.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_secret_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_key_load.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_secret_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_save.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_key.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_attach.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_config_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_stop.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_manifest_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_info.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_commit.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack_deploy.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_scale.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_run.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_port.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_push.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_connect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_secret_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_leave.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_images.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_engine_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_system_events.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_engine_check.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_attach.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_wait.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_ca.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_engine.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_system_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_builder.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_pause.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_commit.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack_ps.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_login.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_unlock-key.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_start.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_init.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_diff.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_restart.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_config.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_disable.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_unpause.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_import.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_deploy.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_checkpoint_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_push.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_engine_activate.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_use.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_manifest_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_manifest_push.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_enable.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_import.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_run.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_save.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_stats.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_exec.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm_join.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_logs.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_checkpoint_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_kill.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_install.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_prune.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_import.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_diff.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_unpause.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_ps.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_top.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_rename.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_history.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_ps.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_tag.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_export.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network_disconnect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_builder_build.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stats.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_search.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_manifest.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_push.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_load.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_swarm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_update.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_set.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_wait.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_export.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_manifest_annotate.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_pull.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_events.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_kill.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_checkpoint_create.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_pause.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_logs.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_promote.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_node_demote.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_exec.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_context.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_volume.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_container_start.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_plugin_inspect.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_logout.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_network.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_image_ls.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_system_df.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_service_rollback.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_restart.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_trust_signer_remove.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_stack_rm.yaml",
    "https://raw.githubusercontent.com/docker/docker.github.io/50fe61e/_data/engine-cli/docker_build.yaml"
  ],
  "name": "Docker",
  "officialUrl": "https://www.docker.com/",
  "help": "Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.",
  "pathExecutable": "docker",
  "customLogger": true,
  "tasks": [
    {
      "help": "Remove one or more configs.",
      "postfix": "ConfigRm",
      "definiteArgument": "config rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Configs",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONFIG"
          }
        ]
      }
    },
    {
      "help": "Load an image from a tar archive or STDIN.",
      "postfix": "Load",
      "definiteArgument": "load",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Input",
            "type": "string",
            "format": "--input {value}",
            "help": "Read from tar archive file, instead of STDIN."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress the load output."
          }
        ]
      }
    },
    {
      "help": "Remove all stopped containers.",
      "postfix": "ContainerPrune",
      "definiteArgument": "container prune",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'until=&lt;timestamp&gt;')."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation."
          }
        ]
      }
    },
    {
      "help": "Manage trust on Docker images.",
      "postfix": "Trust",
      "definiteArgument": "trust",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage Docker stacks.",
      "postfix": "Stack",
      "definiteArgument": "stack",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Kubeconfig",
            "type": "string",
            "format": "--kubeconfig {value}",
            "help": "Kubernetes config file."
          },
          {
            "name": "Orchestrator",
            "type": "string",
            "format": "--orchestrator {value}",
            "help": "Orchestrator to use (swarm|kubernetes|all)."
          }
        ]
      }
    },
    {
      "help": "Display the running processes of a container.",
      "postfix": "Top",
      "definiteArgument": "top [ps",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Options",
            "type": "string",
            "format": "{value}",
            "help": "OPTIONS]"
          }
        ]
      }
    },
    {
      "help": "Pull an image or a repository from a registry.",
      "postfix": "Pull",
      "definiteArgument": "pull",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AllTags",
            "type": "bool",
            "format": "--all-tags",
            "help": "Download all tagged images in the repository."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress verbose output."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME[:TAG|@DIGEST]"
          }
        ]
      }
    },
    {
      "help": "Sign an image.",
      "postfix": "TrustSign",
      "definiteArgument": "trust sign IMAGE:TAG",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage checkpoints.",
      "postfix": "Checkpoint",
      "definiteArgument": "checkpoint",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage entities who can sign Docker images.",
      "postfix": "TrustSigner",
      "definiteArgument": "trust signer",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Display detailed information on one or more configs.",
      "postfix": "ConfigInspect",
      "definiteArgument": "config inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Pretty",
            "type": "bool",
            "format": "--pretty",
            "help": "Print the information in a human friendly format."
          },
          {
            "name": "Configs",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONFIG"
          }
        ]
      }
    },
    {
      "help": "Manage services.",
      "postfix": "Service",
      "definiteArgument": "service",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Generate and load a signing key-pair.",
      "postfix": "TrustKeyGenerate",
      "definiteArgument": "trust key generate",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME"
          }
        ]
      }
    },
    {
      "help": "Manage Docker.",
      "postfix": "System",
      "definiteArgument": "system",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "List configs.",
      "postfix": "ConfigLs",
      "definiteArgument": "config ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print configs using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display IDs."
          }
        ]
      }
    },
    {
      "help": "Update a context.",
      "postfix": "ContextUpdate",
      "definiteArgument": "context update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DefaultStackOrchestrator",
            "type": "string",
            "format": "--default-stack-orchestrator {value}",
            "help": "Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of the context."
          },
          {
            "name": "Docker",
            "type": "string",
            "format": "--docker {value}",
            "help": "set the docker endpoint."
          },
          {
            "name": "Kubernetes",
            "type": "string",
            "format": "--kubernetes {value}",
            "help": "set the kubernetes endpoint."
          },
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "CONTEXT"
          }
        ]
      }
    },
    {
      "help": "List the services in the stack.",
      "postfix": "StackServices",
      "definiteArgument": "stack services",
      "settingsClass": {
        "baseClass": "DockerStackSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print services using a Go template."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Kubernetes namespace to use."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display IDs."
          },
          {
            "name": "Stack",
            "type": "string",
            "format": "{value}",
            "help": "STACK"
          }
        ]
      }
    },
    {
      "help": "List port mappings or a specific mapping for the container.",
      "postfix": "ContainerPort",
      "definiteArgument": "container port",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "PrivatePort",
            "type": "string",
            "format": "{value}",
            "help": "[PRIVATE_PORT[/PROTO]]"
          }
        ]
      }
    },
    {
      "help": "Rename a container.",
      "postfix": "Rename",
      "definiteArgument": "rename",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "NewName",
            "type": "string",
            "format": "{value}",
            "help": "NEW_NAME"
          }
        ]
      }
    },
    {
      "help": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE.",
      "postfix": "Tag",
      "definiteArgument": "tag",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "SourceImage",
            "type": "string",
            "format": "{value}",
            "help": "SOURCE_IMAGE[:TAG]"
          },
          {
            "name": "TargetImage",
            "type": "string",
            "format": "{value}",
            "help": "TARGET_IMAGE[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more secrets.",
      "postfix": "SecretInspect",
      "definiteArgument": "secret inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Pretty",
            "type": "bool",
            "format": "--pretty",
            "help": "Print the information in a human friendly format."
          },
          {
            "name": "Secrets",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "SECRET"
          }
        ]
      }
    },
    {
      "help": "Manage Docker secrets.",
      "postfix": "Secret",
      "definiteArgument": "secret",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Export a container's filesystem as a tar archive.",
      "postfix": "ContainerExport",
      "definiteArgument": "container export",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Write to a file, instead of STDOUT."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Show the history of an image.",
      "postfix": "History",
      "definiteArgument": "history",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "Human",
            "type": "bool",
            "format": "--human",
            "help": "Print sizes and dates in human readable format."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only show numeric IDs."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Create a new service.",
      "postfix": "ServiceCreate",
      "definiteArgument": "service create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Config",
            "type": "string",
            "format": "--config {value}",
            "help": "Specify configurations to expose to the service."
          },
          {
            "name": "Constraint",
            "type": "List<string>",
            "format": "--constraint {value}",
            "help": "Placement constraints."
          },
          {
            "name": "ContainerLabel",
            "type": "List<string>",
            "format": "--container-label {value}",
            "help": "Container labels."
          },
          {
            "name": "CredentialSpec",
            "type": "string",
            "format": "--credential-spec {value}",
            "help": "Credential spec for managed service account (Windows only)."
          },
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Exit immediately instead of waiting for the service to converge."
          },
          {
            "name": "Dns",
            "type": "List<string>",
            "format": "--dns {value}",
            "help": "Set custom DNS servers."
          },
          {
            "name": "DnsOption",
            "type": "List<string>",
            "format": "--dns-option {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsSearch",
            "type": "List<string>",
            "format": "--dns-search {value}",
            "help": "Set custom DNS search domains."
          },
          {
            "name": "EndpointMode",
            "type": "string",
            "format": "--endpoint-mode {value}",
            "help": "Endpoint mode (vip or dnsrr)."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "EnvFile",
            "type": "List<string>",
            "format": "--env-file {value}",
            "help": "Read in a file of environment variables."
          },
          {
            "name": "GenericResource",
            "type": "List<string>",
            "format": "--generic-resource {value}",
            "help": "User defined resources."
          },
          {
            "name": "Group",
            "type": "List<string>",
            "format": "--group {value}",
            "help": "Set one or more supplementary user groups for the container."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h)."
          },
          {
            "name": "Host",
            "type": "List<string>",
            "format": "--host {value}",
            "help": "Set one or more custom host-to-IP mappings (host:ip)."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container hostname."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Use an init inside each service container to forward signals and reap processes."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Service container isolation mode."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Service labels."
          },
          {
            "name": "LimitCpu",
            "type": "decimal?",
            "format": "--limit-cpu {value}",
            "help": "Limit CPUs."
          },
          {
            "name": "LimitMemory",
            "type": "long?",
            "format": "--limit-memory {value}",
            "help": "Limit Memory."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for service."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Logging driver options."
          },
          {
            "name": "Mode",
            "type": "string",
            "format": "--mode {value}",
            "help": "Service mode (replicated or global)."
          },
          {
            "name": "Mount",
            "type": "string",
            "format": "--mount {value}",
            "help": "Attach a filesystem mount to the service."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Service name."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Network attachments."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "NoResolveImage",
            "type": "bool",
            "format": "--no-resolve-image",
            "help": "Do not query the registry to resolve image digest and supported platforms."
          },
          {
            "name": "PlacementPref",
            "type": "string",
            "format": "--placement-pref {value}",
            "help": "Add a placement preference."
          },
          {
            "name": "Publish",
            "type": "string",
            "format": "--publish {value}",
            "help": "Publish a port as a node port."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress progress output."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Replicas",
            "type": "int",
            "format": "--replicas {value}",
            "help": "Number of tasks."
          },
          {
            "name": "ReplicasMaxPerNode",
            "type": "int",
            "format": "--replicas-max-per-node {value}",
            "help": "Maximum number of tasks per node (default 0 = unlimited)."
          },
          {
            "name": "ReserveCpu",
            "type": "decimal?",
            "format": "--reserve-cpu {value}",
            "help": "Reserve CPUs."
          },
          {
            "name": "ReserveMemory",
            "type": "long?",
            "format": "--reserve-memory {value}",
            "help": "Reserve Memory."
          },
          {
            "name": "RestartCondition",
            "type": "RestartCondition",
            "format": "--restart-condition {value}",
            "help": "Restart when condition is met (\"none\"|\"on-failure\"|\"any\") (default \"any\")."
          },
          {
            "name": "RestartDelay",
            "type": "string",
            "format": "--restart-delay {value}",
            "help": "Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)."
          },
          {
            "name": "RestartMaxAttempts",
            "type": "int",
            "format": "--restart-max-attempts {value}",
            "help": "Maximum number of restarts before giving up."
          },
          {
            "name": "RestartWindow",
            "type": "string",
            "format": "--restart-window {value}",
            "help": "Window used to evaluate the restart policy (ns|us|ms|s|m|h)."
          },
          {
            "name": "RollbackDelay",
            "type": "string",
            "format": "--rollback-delay {value}",
            "help": "Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)."
          },
          {
            "name": "RollbackFailureAction",
            "type": "RollbackFailureAction",
            "format": "--rollback-failure-action {value}",
            "help": "Action on rollback failure (\"pause\"|\"continue\") (default \"pause\")."
          },
          {
            "name": "RollbackMaxFailureRatio",
            "type": "float",
            "format": "--rollback-max-failure-ratio {value}",
            "help": "Failure rate to tolerate during a rollback (default 0)."
          },
          {
            "name": "RollbackMonitor",
            "type": "string",
            "format": "--rollback-monitor {value}",
            "help": "Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)."
          },
          {
            "name": "RollbackOrder",
            "type": "RollbackOrder",
            "format": "--rollback-order {value}",
            "help": "Rollback order (\"start-first\"|\"stop-first\") (default \"stop-first\")."
          },
          {
            "name": "RollbackParallelism",
            "type": "int",
            "format": "--rollback-parallelism {value}",
            "help": "Maximum number of tasks rolled back simultaneously (0 to roll back all at once)."
          },
          {
            "name": "Secret",
            "type": "string",
            "format": "--secret {value}",
            "help": "Specify secrets to expose to the service."
          },
          {
            "name": "StopGracePeriod",
            "type": "string",
            "format": "--stop-grace-period {value}",
            "help": "Time to wait before force killing a container (ns|us|ms|s|m|h) (default 10s)."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop the container."
          },
          {
            "name": "Sysctl",
            "type": "List<string>",
            "format": "--sysctl {value}",
            "help": "Sysctl options."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "UpdateDelay",
            "type": "string",
            "format": "--update-delay {value}",
            "help": "Delay between updates (ns|us|ms|s|m|h) (default 0s)."
          },
          {
            "name": "UpdateFailureAction",
            "type": "UpdateFailureAction",
            "format": "--update-failure-action {value}",
            "help": "Action on update failure (\"pause\"|\"continue\"|\"rollback\") (default \"pause\")."
          },
          {
            "name": "UpdateMaxFailureRatio",
            "type": "float",
            "format": "--update-max-failure-ratio {value}",
            "help": "Failure rate to tolerate during an update (default 0)."
          },
          {
            "name": "UpdateMonitor",
            "type": "string",
            "format": "--update-monitor {value}",
            "help": "Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)."
          },
          {
            "name": "UpdateOrder",
            "type": "UpdateOrder",
            "format": "--update-order {value}",
            "help": "Update order (\"start-first\"|\"stop-first\") (default \"stop-first\")."
          },
          {
            "name": "UpdateParallelism",
            "type": "int",
            "format": "--update-parallelism {value}",
            "help": "Maximum number of tasks updated simultaneously (0 to update all at once)."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "WithRegistryAuth",
            "type": "bool",
            "format": "--with-registry-auth",
            "help": "Send registry authentication details to swarm agents."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "[COMMAND]"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "List the tasks of one or more services.",
      "postfix": "ServicePs",
      "definiteArgument": "service ps",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print tasks using a Go template."
          },
          {
            "name": "NoResolve",
            "type": "bool",
            "format": "--no-resolve",
            "help": "Do not map IDs to Names."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display task IDs."
          },
          {
            "name": "Services",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "SERVICE"
          }
        ]
      }
    },
    {
      "help": "Stop one or more running containers.",
      "postfix": "Stop",
      "definiteArgument": "stop",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Time",
            "type": "int",
            "format": "--time {value}",
            "help": "Seconds to wait for stop before killing it."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Manage Swarm nodes.",
      "postfix": "Node",
      "definiteArgument": "node",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Update configuration of one or more containers.",
      "postfix": "Update",
      "definiteArgument": "update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit the CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit the CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.",
      "postfix": "PluginCreate",
      "definiteArgument": "plugin create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Compress",
            "type": "bool",
            "format": "--compress",
            "help": "Compress the context using gzip."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          },
          {
            "name": "PluginDataDir",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN-DATA-DIR"
          }
        ]
      }
    },
    {
      "help": "Display system-wide information.",
      "postfix": "SystemInfo",
      "definiteArgument": "system info",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          }
        ]
      }
    },
    {
      "help": "Remove all unused local volumes.",
      "postfix": "VolumePrune",
      "definiteArgument": "volume prune",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'label=&lt;label&gt;')."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation."
          }
        ]
      }
    },
    {
      "help": "Upgrade an existing plugin.",
      "postfix": "PluginUpgrade",
      "definiteArgument": "plugin upgrade",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "GrantAllPermissions",
            "type": "bool",
            "format": "--grant-all-permissions",
            "help": "Grant all permissions necessary to run the plugin."
          },
          {
            "name": "SkipRemoteCheck",
            "type": "bool",
            "format": "--skip-remote-check",
            "help": "Do not check if specified remote plugin matches existing plugin image."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          },
          {
            "name": "Remote",
            "type": "string",
            "format": "{value}",
            "help": "[REMOTE]"
          }
        ]
      }
    },
    {
      "help": "Remove build cache.",
      "postfix": "BuilderPrune",
      "definiteArgument": "builder prune",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage join tokens.",
      "postfix": "SwarmJoinToken",
      "definiteArgument": "swarm join-token",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display token."
          },
          {
            "name": "Rotate",
            "type": "bool",
            "format": "--rotate",
            "help": "Rotate join token."
          },
          {
            "name": "Worker",
            "type": "string",
            "format": "{value}",
            "help": "(worker|manager)"
          }
        ]
      }
    },
    {
      "help": "Update a node.",
      "postfix": "NodeUpdate",
      "definiteArgument": "node update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Availability",
            "type": "Availability",
            "format": "--availability {value}",
            "help": "Availability of the node (\"active\"|\"pause\"|\"drain\")."
          },
          {
            "name": "LabelAdd",
            "type": "List<string>",
            "format": "--label-add {value}",
            "help": "Add or update a node label (key=value)."
          },
          {
            "name": "LabelRm",
            "type": "List<string>",
            "format": "--label-rm {value}",
            "help": "Remove a node label if exists."
          },
          {
            "name": "Role",
            "type": "Role",
            "format": "--role {value}",
            "help": "Role of the node (\"worker\"|\"manager\")."
          },
          {
            "name": "Node",
            "type": "string",
            "format": "{value}",
            "help": "NODE"
          }
        ]
      }
    },
    {
      "help": "Add a signer.",
      "postfix": "TrustSignerAdd",
      "definiteArgument": "trust signer add",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Options",
            "type": "string",
            "format": "{value}",
            "help": "OPTIONS"
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME"
          },
          {
            "name": "Repositories",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "REPOSITORY"
          }
        ]
      }
    },
    {
      "help": "Update the swarm.",
      "postfix": "SwarmUpdate",
      "definiteArgument": "swarm update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Autolock",
            "type": "bool",
            "format": "--autolock",
            "help": "Change manager autolocking setting (true|false)."
          },
          {
            "name": "CertExpiry",
            "type": "string",
            "format": "--cert-expiry {value}",
            "help": "Validity period for node certificates (ns|us|ms|s|m|h)."
          },
          {
            "name": "DispatcherHeartbeat",
            "type": "string",
            "format": "--dispatcher-heartbeat {value}",
            "help": "Dispatcher heartbeat period (ns|us|ms|s|m|h)."
          },
          {
            "name": "ExternalCa",
            "type": "string",
            "format": "--external-ca {value}",
            "help": "Specifications of one or more certificate signing endpoints."
          },
          {
            "name": "MaxSnapshots",
            "type": "int",
            "format": "--max-snapshots {value}",
            "help": "Number of additional Raft snapshots to retain."
          },
          {
            "name": "SnapshotInterval",
            "type": "int",
            "format": "--snapshot-interval {value}",
            "help": "Number of log entries between Raft snapshots."
          },
          {
            "name": "TaskHistoryLimit",
            "type": "long?",
            "format": "--task-history-limit {value}",
            "help": "Task history retention limit."
          }
        ]
      }
    },
    {
      "help": "Fetch the logs of a service or task.",
      "postfix": "ServiceLogs",
      "definiteArgument": "service logs",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Details",
            "type": "bool",
            "format": "--details",
            "help": "Show extra details provided to logs."
          },
          {
            "name": "Follow",
            "type": "bool",
            "format": "--follow",
            "help": "Follow log output."
          },
          {
            "name": "NoResolve",
            "type": "bool",
            "format": "--no-resolve",
            "help": "Do not map IDs to Names in output."
          },
          {
            "name": "NoTaskIds",
            "type": "bool",
            "format": "--no-task-ids",
            "help": "Do not include task IDs in output."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Raw",
            "type": "bool",
            "format": "--raw",
            "help": "Do not neatly format logs."
          },
          {
            "name": "Since",
            "type": "string",
            "format": "--since {value}",
            "help": "Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)."
          },
          {
            "name": "Tail",
            "type": "string",
            "format": "--tail {value}",
            "help": "Number of lines to show from the end of the logs."
          },
          {
            "name": "Timestamps",
            "type": "bool",
            "format": "--timestamps",
            "help": "Show timestamps."
          },
          {
            "name": "Service",
            "type": "string",
            "format": "{value}",
            "help": "SERVICE|TASK"
          }
        ]
      }
    },
    {
      "help": "List services.",
      "postfix": "ServiceLs",
      "definiteArgument": "service ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print services using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display IDs."
          }
        ]
      }
    },
    {
      "help": "Unlock swarm.",
      "postfix": "SwarmUnlock",
      "definiteArgument": "swarm unlock",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "List networks.",
      "postfix": "NetworkLs",
      "definiteArgument": "network ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'driver=bridge')."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print networks using a Go template."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate the output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display network IDs."
          }
        ]
      }
    },
    {
      "help": "List plugins.",
      "postfix": "PluginLs",
      "definiteArgument": "plugin ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'enabled=true')."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print plugins using a Go template."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display plugin IDs."
          }
        ]
      }
    },
    {
      "help": "Remove one or more plugins.",
      "postfix": "PluginRm",
      "definiteArgument": "plugin rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the removal of an active plugin."
          },
          {
            "name": "Plugins",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "PLUGIN"
          }
        ]
      }
    },
    {
      "help": "Build an image from a Dockerfile.",
      "postfix": "ImageBuild",
      "definiteArgument": "image build",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "BuildArg",
            "type": "List<string>",
            "format": "--build-arg {value}",
            "help": "Set build-time variables."
          },
          {
            "name": "CacheFrom",
            "type": "List<string>",
            "format": "--cache-from {value}",
            "help": "Images to consider as cache sources."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Compress",
            "type": "bool",
            "format": "--compress",
            "help": "Compress the build context using gzip."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Name of the Dockerfile (Default is 'PATH/Dockerfile')."
          },
          {
            "name": "ForceRm",
            "type": "bool",
            "format": "--force-rm",
            "help": "Always remove intermediate containers."
          },
          {
            "name": "Iidfile",
            "type": "string",
            "format": "--iidfile {value}",
            "help": "Write the image ID to the file."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set metadata for an image."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Set the networking mode for the RUN instructions during build."
          },
          {
            "name": "NoCache",
            "type": "bool",
            "format": "--no-cache",
            "help": "Do not use cache when building the image."
          },
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Output destination (format: type=local,dest=path)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Progress",
            "type": "string",
            "format": "--progress {value}",
            "help": "Set type of progress output (auto, plain, tty). Use plain to show container output."
          },
          {
            "name": "Pull",
            "type": "bool",
            "format": "--pull",
            "help": "Always attempt to pull a newer version of the image."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress the build output and print image ID on success."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Remove intermediate containers after a successful build."
          },
          {
            "name": "Secret",
            "type": "string",
            "format": "--secret {value}",
            "help": "Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "Squash",
            "type": "bool",
            "format": "--squash",
            "help": "Squash newly built layers into a single new layer."
          },
          {
            "name": "Ssh",
            "type": "string",
            "format": "--ssh {value}",
            "help": "SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|&lt;id&gt;[=&lt;socket&gt;|&lt;key&gt;[,&lt;key&gt;]])."
          },
          {
            "name": "Stream",
            "type": "bool",
            "format": "--stream",
            "help": "Stream attaches to server to negotiate build context."
          },
          {
            "name": "Tag",
            "type": "List<string>",
            "format": "--tag {value}",
            "help": "Name and optionally a tag in the 'name:tag' format."
          },
          {
            "name": "Target",
            "type": "string",
            "format": "--target {value}",
            "help": "Set the target build stage to build."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "Path",
            "type": "string",
            "format": "{value}",
            "help": "Path or url where the build context is located."
          }
        ]
      }
    },
    {
      "help": "Remove trust for an image.",
      "postfix": "TrustRevoke",
      "definiteArgument": "trust revoke",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Yes",
            "type": "bool",
            "format": "--yes",
            "help": "Do not prompt for confirmation."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Remove one or more images.",
      "postfix": "Rmi",
      "definiteArgument": "rmi",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force removal of the image."
          },
          {
            "name": "NoPrune",
            "type": "bool",
            "format": "--no-prune",
            "help": "Do not delete untagged parents."
          },
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Remove one or more networks.",
      "postfix": "NetworkRm",
      "definiteArgument": "network rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Networks",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NETWORK"
          }
        ]
      }
    },
    {
      "help": "Show the Docker version information.",
      "postfix": "Version",
      "definiteArgument": "version",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Kubeconfig",
            "type": "string",
            "format": "--kubeconfig {value}",
            "help": "Kubernetes config file."
          }
        ]
      }
    },
    {
      "help": "Create a secret from a file or STDIN as content.",
      "postfix": "SecretCreate",
      "definiteArgument": "secret create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Driver",
            "type": "string",
            "format": "--driver {value}",
            "help": "Secret driver."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Secret labels."
          },
          {
            "name": "TemplateDriver",
            "type": "string",
            "format": "--template-driver {value}",
            "help": "Template driver."
          },
          {
            "name": "Secret",
            "type": "string",
            "format": "{value}",
            "help": "SECRET"
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "Path to file to create the secret from."
          }
        ]
      }
    },
    {
      "help": "Remove one or more services.",
      "postfix": "ServiceRm",
      "definiteArgument": "service rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Services",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "SERVICE"
          }
        ]
      }
    },
    {
      "help": "Load a private key file for signing.",
      "postfix": "TrustKeyLoad",
      "definiteArgument": "trust key load",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Name for the loaded key."
          },
          {
            "name": "Keyfile",
            "type": "string",
            "format": "{value}",
            "help": "KEYFILE"
          }
        ]
      }
    },
    {
      "help": "Remove one or more secrets.",
      "postfix": "SecretRm",
      "definiteArgument": "secret rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Secrets",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "SECRET"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more images.",
      "postfix": "ImageInspect",
      "definiteArgument": "image inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Save one or more images to a tar archive (streamed to STDOUT by default).",
      "postfix": "ImageSave",
      "definiteArgument": "image save",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Write to a file, instead of STDOUT."
          },
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Manage keys for signing Docker images.",
      "postfix": "TrustKey",
      "definiteArgument": "trust key",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Attach local standard input, output, and error streams to a running container.",
      "postfix": "ContainerAttach",
      "definiteArgument": "container attach",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "NoStdin",
            "type": "bool",
            "format": "--no-stdin",
            "help": "Do not attach STDIN."
          },
          {
            "name": "SigProxy",
            "type": "bool",
            "format": "--sig-proxy",
            "help": "Proxy all received signals to the process."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Create a context.",
      "postfix": "ContextCreate",
      "definiteArgument": "context create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DefaultStackOrchestrator",
            "type": "string",
            "format": "--default-stack-orchestrator {value}",
            "help": "Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)."
          },
          {
            "name": "Description",
            "type": "string",
            "format": "--description {value}",
            "help": "Description of the context."
          },
          {
            "name": "Docker",
            "type": "string",
            "format": "--docker {value}",
            "help": "set the docker endpoint."
          },
          {
            "name": "From",
            "type": "string",
            "format": "--from {value}",
            "help": "create context from a named context."
          },
          {
            "name": "Kubernetes",
            "type": "string",
            "format": "--kubernetes {value}",
            "help": "set the kubernetes endpoint."
          },
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "CONTEXT"
          }
        ]
      }
    },
    {
      "help": "Create a config from a file or STDIN.",
      "postfix": "ConfigCreate",
      "definiteArgument": "config create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Config labels."
          },
          {
            "name": "TemplateDriver",
            "type": "string",
            "format": "--template-driver {value}",
            "help": "Template driver."
          },
          {
            "name": "Config",
            "type": "string",
            "format": "{value}",
            "help": "CONFIG"
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "file|-"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more volumes.",
      "postfix": "VolumeInspect",
      "definiteArgument": "volume inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Volumes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "VOLUME"
          }
        ]
      }
    },
    {
      "help": "Stop one or more running containers.",
      "postfix": "ContainerStop",
      "definiteArgument": "container stop",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Time",
            "type": "int",
            "format": "--time {value}",
            "help": "Seconds to wait for stop before killing it."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Remove all unused networks.",
      "postfix": "NetworkPrune",
      "definiteArgument": "network prune",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'until=&lt;timestamp&gt;')."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation."
          }
        ]
      }
    },
    {
      "help": "Display an image manifest, or manifest list.",
      "postfix": "ManifestInspect",
      "definiteArgument": "manifest inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Insecure",
            "type": "bool",
            "format": "--insecure",
            "help": "Allow communication with an insecure registry."
          },
          {
            "name": "Verbose",
            "type": "bool",
            "format": "--verbose",
            "help": "Output additional info including layers and platform."
          },
          {
            "name": "ManifestList",
            "type": "string",
            "format": "{value}",
            "help": "[MANIFEST_LIST]"
          },
          {
            "name": "Manifest",
            "type": "string",
            "format": "{value}",
            "help": "MANIFEST"
          }
        ]
      }
    },
    {
      "help": "Display system-wide information.",
      "postfix": "Info",
      "definiteArgument": "info",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          }
        ]
      }
    },
    {
      "help": "Create a new image from a container's changes.",
      "postfix": "Commit",
      "definiteArgument": "commit",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Author",
            "type": "string",
            "format": "--author {value}",
            "help": "Author (e.g., \"John Hannibal Smith &lt;hannibal@a-team.com&gt;\")."
          },
          {
            "name": "Change",
            "type": "List<string>",
            "format": "--change {value}",
            "help": "Apply Dockerfile instruction to the created image."
          },
          {
            "name": "Message",
            "type": "string",
            "format": "--message {value}",
            "help": "Commit message."
          },
          {
            "name": "Pause",
            "type": "bool",
            "format": "--pause",
            "help": "Pause container during commit."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "Deploy a new stack or update an existing stack.",
      "postfix": "StackDeploy",
      "definiteArgument": "stack deploy",
      "settingsClass": {
        "baseClass": "DockerStackSettings",
        "properties": [
          {
            "name": "BundleFile",
            "type": "string",
            "format": "--bundle-file {value}",
            "help": "Path to a Distributed Application Bundle file."
          },
          {
            "name": "ComposeFile",
            "type": "List<string>",
            "format": "--compose-file {value}",
            "help": "Path to a Compose file, or \"-\" to read from stdin."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Kubernetes namespace to use."
          },
          {
            "name": "Prune",
            "type": "bool",
            "format": "--prune",
            "help": "Prune services that are no longer referenced."
          },
          {
            "name": "ResolveImage",
            "type": "ResolveImage",
            "format": "--resolve-image {value}",
            "help": "Query the registry to resolve image digest and supported platforms (\"always\"|\"changed\"|\"never\")."
          },
          {
            "name": "WithRegistryAuth",
            "type": "bool",
            "format": "--with-registry-auth",
            "help": "Send registry authentication details to Swarm agents."
          },
          {
            "name": "Stack",
            "type": "string",
            "format": "{value}",
            "help": "STACK"
          }
        ]
      }
    },
    {
      "help": "Scale one or multiple replicated services.",
      "postfix": "ServiceScale",
      "definiteArgument": "service scale",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "ServiceReplicas",
            "type": "Dictionary<string,string>",
            "format": "{value}",
            "itemFormat": "{key=value}",
            "help": "SERVICE=REPLICAS"
          }
        ]
      }
    },
    {
      "help": "Run a command in a new container.",
      "postfix": "Run",
      "definiteArgument": "run",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "Attach",
            "type": "List<string>",
            "format": "--attach {value}",
            "help": "Attach to STDIN, STDOUT or STDERR."
          },
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "BlkioWeightDevice",
            "type": "List<string>",
            "format": "--blkio-weight-device {value}",
            "help": "Block IO weight (relative device weight)."
          },
          {
            "name": "CapAdd",
            "type": "List<string>",
            "format": "--cap-add {value}",
            "help": "Add Linux capabilities."
          },
          {
            "name": "CapDrop",
            "type": "List<string>",
            "format": "--cap-drop {value}",
            "help": "Drop Linux capabilities."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Cidfile",
            "type": "string",
            "format": "--cidfile {value}",
            "help": "Write the container ID to the file."
          },
          {
            "name": "CpuCount",
            "type": "long?",
            "format": "--cpu-count {value}",
            "help": "CPU count (Windows only)."
          },
          {
            "name": "CpuPercent",
            "type": "long?",
            "format": "--cpu-percent {value}",
            "help": "CPU percent (Windows only)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Run container in background and print container ID."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Device",
            "type": "List<string>",
            "format": "--device {value}",
            "help": "Add a host device to the container."
          },
          {
            "name": "DeviceCgroupRule",
            "type": "List<string>",
            "format": "--device-cgroup-rule {value}",
            "help": "Add a rule to the cgroup allowed devices list."
          },
          {
            "name": "DeviceReadBps",
            "type": "List<string>",
            "format": "--device-read-bps {value}",
            "help": "Limit read rate (bytes per second) from a device."
          },
          {
            "name": "DeviceReadIops",
            "type": "List<string>",
            "format": "--device-read-iops {value}",
            "help": "Limit read rate (IO per second) from a device."
          },
          {
            "name": "DeviceWriteBps",
            "type": "List<string>",
            "format": "--device-write-bps {value}",
            "help": "Limit write rate (bytes per second) to a device."
          },
          {
            "name": "DeviceWriteIops",
            "type": "List<string>",
            "format": "--device-write-iops {value}",
            "help": "Limit write rate (IO per second) to a device."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Dns",
            "type": "List<string>",
            "format": "--dns {value}",
            "help": "Set custom DNS servers."
          },
          {
            "name": "DnsOpt",
            "type": "List<string>",
            "format": "--dns-opt {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsOption",
            "type": "List<string>",
            "format": "--dns-option {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsSearch",
            "type": "List<string>",
            "format": "--dns-search {value}",
            "help": "Set custom DNS search domains."
          },
          {
            "name": "Domainname",
            "type": "string",
            "format": "--domainname {value}",
            "help": "Container NIS domain name."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "EnvFile",
            "type": "List<string>",
            "format": "--env-file {value}",
            "help": "Read in a file of environment variables."
          },
          {
            "name": "Expose",
            "type": "List<string>",
            "format": "--expose {value}",
            "help": "Expose a port or a range of ports."
          },
          {
            "name": "Gpus",
            "type": "string",
            "format": "--gpus {value}",
            "help": "GPU devices to add to the container ('all' to pass all GPUs)."
          },
          {
            "name": "GroupAdd",
            "type": "List<string>",
            "format": "--group-add {value}",
            "help": "Add additional groups to join."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)."
          },
          {
            "name": "Help",
            "type": "bool",
            "format": "--help",
            "help": "Print usage."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container host name."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Run an init inside the container that forwards signals and reaps processes."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "IoMaxbandwidth",
            "type": "long?",
            "format": "--io-maxbandwidth {value}",
            "help": "Maximum IO bandwidth limit for the system drive (Windows only)."
          },
          {
            "name": "IoMaxiops",
            "type": "int",
            "format": "--io-maxiops {value}",
            "help": "Maximum IOps limit for the system drive (Windows only)."
          },
          {
            "name": "Ip",
            "type": "string",
            "format": "--ip {value}",
            "help": "IPv4 address (e.g., 172.30.100.104)."
          },
          {
            "name": "Ip6",
            "type": "string",
            "format": "--ip6 {value}",
            "help": "IPv6 address (e.g., 2001:db8::33)."
          },
          {
            "name": "Ipc",
            "type": "string",
            "format": "--ipc {value}",
            "help": "IPC mode to use."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set meta data on a container."
          },
          {
            "name": "LabelFile",
            "type": "List<string>",
            "format": "--label-file {value}",
            "help": "Read in a line delimited file of labels."
          },
          {
            "name": "Link",
            "type": "List<string>",
            "format": "--link {value}",
            "help": "Add link to another container."
          },
          {
            "name": "LinkLocalIp",
            "type": "List<string>",
            "format": "--link-local-ip {value}",
            "help": "Container IPv4/IPv6 link-local addresses."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for the container."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Log driver options."
          },
          {
            "name": "MacAddress",
            "type": "string",
            "format": "--mac-address {value}",
            "help": "Container MAC address (e.g., 92:d0:c6:0a:29:33)."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "MemorySwappiness",
            "type": "long?",
            "format": "--memory-swappiness {value}",
            "help": "Tune container memory swappiness (0 to 100)."
          },
          {
            "name": "Mount",
            "type": "string",
            "format": "--mount {value}",
            "help": "Attach a filesystem mount to the container."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Assign a name to the container."
          },
          {
            "name": "Net",
            "type": "string",
            "format": "--net {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetAlias",
            "type": "List<string>",
            "format": "--net-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetworkAlias",
            "type": "List<string>",
            "format": "--network-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "OomKillDisable",
            "type": "bool",
            "format": "--oom-kill-disable",
            "help": "Disable OOM Killer."
          },
          {
            "name": "OomScoreAdj",
            "type": "int",
            "format": "--oom-score-adj {value}",
            "help": "Tune host's OOM preferences (-1000 to 1000)."
          },
          {
            "name": "Pid",
            "type": "string",
            "format": "--pid {value}",
            "help": "PID namespace to use."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to this container."
          },
          {
            "name": "Publish",
            "type": "List<string>",
            "format": "--publish {value}",
            "help": "Publish a container's port(s) to the host."
          },
          {
            "name": "PublishAll",
            "type": "bool",
            "format": "--publish-all",
            "help": "Publish all exposed ports to random ports."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Automatically remove the container when it exits."
          },
          {
            "name": "Runtime",
            "type": "string",
            "format": "--runtime {value}",
            "help": "Runtime to use for this container."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security Options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "SigProxy",
            "type": "bool",
            "format": "--sig-proxy",
            "help": "Proxy received signals to the process."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop a container."
          },
          {
            "name": "StopTimeout",
            "type": "int",
            "format": "--stop-timeout {value}",
            "help": "Timeout (in seconds) to stop a container."
          },
          {
            "name": "StorageOpt",
            "type": "List<string>",
            "format": "--storage-opt {value}",
            "help": "Storage driver options for the container."
          },
          {
            "name": "Sysctl",
            "type": "Dictionary<string,string>",
            "format": "--sysctl {value}",
            "itemFormat": "{key}:{value}",
            "help": "Sysctl options."
          },
          {
            "name": "Tmpfs",
            "type": "List<string>",
            "format": "--tmpfs {value}",
            "help": "Mount a tmpfs directory."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Userns",
            "type": "string",
            "format": "--userns {value}",
            "help": "User namespace to use."
          },
          {
            "name": "Uts",
            "type": "string",
            "format": "--uts {value}",
            "help": "UTS namespace to use."
          },
          {
            "name": "Volume",
            "type": "List<string>",
            "format": "--volume {value}",
            "help": "Bind mount a volume."
          },
          {
            "name": "VolumeDriver",
            "type": "string",
            "format": "--volume-driver {value}",
            "help": "Optional volume driver for the container."
          },
          {
            "name": "VolumesFrom",
            "type": "List<string>",
            "format": "--volumes-from {value}",
            "help": "Mount volumes from the specified container(s)."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "[COMMAND]"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "Create a new container.",
      "postfix": "Create",
      "definiteArgument": "create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "Attach",
            "type": "List<string>",
            "format": "--attach {value}",
            "help": "Attach to STDIN, STDOUT or STDERR."
          },
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "BlkioWeightDevice",
            "type": "List<string>",
            "format": "--blkio-weight-device {value}",
            "help": "Block IO weight (relative device weight)."
          },
          {
            "name": "CapAdd",
            "type": "List<string>",
            "format": "--cap-add {value}",
            "help": "Add Linux capabilities."
          },
          {
            "name": "CapDrop",
            "type": "List<string>",
            "format": "--cap-drop {value}",
            "help": "Drop Linux capabilities."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Cidfile",
            "type": "string",
            "format": "--cidfile {value}",
            "help": "Write the container ID to the file."
          },
          {
            "name": "CpuCount",
            "type": "long?",
            "format": "--cpu-count {value}",
            "help": "CPU count (Windows only)."
          },
          {
            "name": "CpuPercent",
            "type": "long?",
            "format": "--cpu-percent {value}",
            "help": "CPU percent (Windows only)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "Device",
            "type": "List<string>",
            "format": "--device {value}",
            "help": "Add a host device to the container."
          },
          {
            "name": "DeviceCgroupRule",
            "type": "List<string>",
            "format": "--device-cgroup-rule {value}",
            "help": "Add a rule to the cgroup allowed devices list."
          },
          {
            "name": "DeviceReadBps",
            "type": "List<string>",
            "format": "--device-read-bps {value}",
            "help": "Limit read rate (bytes per second) from a device."
          },
          {
            "name": "DeviceReadIops",
            "type": "List<string>",
            "format": "--device-read-iops {value}",
            "help": "Limit read rate (IO per second) from a device."
          },
          {
            "name": "DeviceWriteBps",
            "type": "List<string>",
            "format": "--device-write-bps {value}",
            "help": "Limit write rate (bytes per second) to a device."
          },
          {
            "name": "DeviceWriteIops",
            "type": "List<string>",
            "format": "--device-write-iops {value}",
            "help": "Limit write rate (IO per second) to a device."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Dns",
            "type": "List<string>",
            "format": "--dns {value}",
            "help": "Set custom DNS servers."
          },
          {
            "name": "DnsOpt",
            "type": "List<string>",
            "format": "--dns-opt {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsOption",
            "type": "List<string>",
            "format": "--dns-option {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsSearch",
            "type": "List<string>",
            "format": "--dns-search {value}",
            "help": "Set custom DNS search domains."
          },
          {
            "name": "Domainname",
            "type": "string",
            "format": "--domainname {value}",
            "help": "Container NIS domain name."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "EnvFile",
            "type": "List<string>",
            "format": "--env-file {value}",
            "help": "Read in a file of environment variables."
          },
          {
            "name": "Expose",
            "type": "List<string>",
            "format": "--expose {value}",
            "help": "Expose a port or a range of ports."
          },
          {
            "name": "Gpus",
            "type": "string",
            "format": "--gpus {value}",
            "help": "GPU devices to add to the container ('all' to pass all GPUs)."
          },
          {
            "name": "GroupAdd",
            "type": "List<string>",
            "format": "--group-add {value}",
            "help": "Add additional groups to join."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)."
          },
          {
            "name": "Help",
            "type": "bool",
            "format": "--help",
            "help": "Print usage."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container host name."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Run an init inside the container that forwards signals and reaps processes."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "IoMaxbandwidth",
            "type": "long?",
            "format": "--io-maxbandwidth {value}",
            "help": "Maximum IO bandwidth limit for the system drive (Windows only)."
          },
          {
            "name": "IoMaxiops",
            "type": "int",
            "format": "--io-maxiops {value}",
            "help": "Maximum IOps limit for the system drive (Windows only)."
          },
          {
            "name": "Ip",
            "type": "string",
            "format": "--ip {value}",
            "help": "IPv4 address (e.g., 172.30.100.104)."
          },
          {
            "name": "Ip6",
            "type": "string",
            "format": "--ip6 {value}",
            "help": "IPv6 address (e.g., 2001:db8::33)."
          },
          {
            "name": "Ipc",
            "type": "string",
            "format": "--ipc {value}",
            "help": "IPC mode to use."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set meta data on a container."
          },
          {
            "name": "LabelFile",
            "type": "List<string>",
            "format": "--label-file {value}",
            "help": "Read in a line delimited file of labels."
          },
          {
            "name": "Link",
            "type": "List<string>",
            "format": "--link {value}",
            "help": "Add link to another container."
          },
          {
            "name": "LinkLocalIp",
            "type": "List<string>",
            "format": "--link-local-ip {value}",
            "help": "Container IPv4/IPv6 link-local addresses."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for the container."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Log driver options."
          },
          {
            "name": "MacAddress",
            "type": "string",
            "format": "--mac-address {value}",
            "help": "Container MAC address (e.g., 92:d0:c6:0a:29:33)."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "MemorySwappiness",
            "type": "long?",
            "format": "--memory-swappiness {value}",
            "help": "Tune container memory swappiness (0 to 100)."
          },
          {
            "name": "Mount",
            "type": "string",
            "format": "--mount {value}",
            "help": "Attach a filesystem mount to the container."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Assign a name to the container."
          },
          {
            "name": "Net",
            "type": "string",
            "format": "--net {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetAlias",
            "type": "List<string>",
            "format": "--net-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetworkAlias",
            "type": "List<string>",
            "format": "--network-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "OomKillDisable",
            "type": "bool",
            "format": "--oom-kill-disable",
            "help": "Disable OOM Killer."
          },
          {
            "name": "OomScoreAdj",
            "type": "int",
            "format": "--oom-score-adj {value}",
            "help": "Tune host's OOM preferences (-1000 to 1000)."
          },
          {
            "name": "Pid",
            "type": "string",
            "format": "--pid {value}",
            "help": "PID namespace to use."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to this container."
          },
          {
            "name": "Publish",
            "type": "List<string>",
            "format": "--publish {value}",
            "help": "Publish a container's port(s) to the host."
          },
          {
            "name": "PublishAll",
            "type": "bool",
            "format": "--publish-all",
            "help": "Publish all exposed ports to random ports."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Automatically remove the container when it exits."
          },
          {
            "name": "Runtime",
            "type": "string",
            "format": "--runtime {value}",
            "help": "Runtime to use for this container."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security Options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop a container."
          },
          {
            "name": "StopTimeout",
            "type": "int",
            "format": "--stop-timeout {value}",
            "help": "Timeout (in seconds) to stop a container."
          },
          {
            "name": "StorageOpt",
            "type": "List<string>",
            "format": "--storage-opt {value}",
            "help": "Storage driver options for the container."
          },
          {
            "name": "Sysctl",
            "type": "Dictionary<string,string>",
            "format": "--sysctl {value}",
            "itemFormat": "{key}:{value}",
            "help": "Sysctl options."
          },
          {
            "name": "Tmpfs",
            "type": "List<string>",
            "format": "--tmpfs {value}",
            "help": "Mount a tmpfs directory."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Userns",
            "type": "string",
            "format": "--userns {value}",
            "help": "User namespace to use."
          },
          {
            "name": "Uts",
            "type": "string",
            "format": "--uts {value}",
            "help": "UTS namespace to use."
          },
          {
            "name": "Volume",
            "type": "List<string>",
            "format": "--volume {value}",
            "help": "Bind mount a volume."
          },
          {
            "name": "VolumeDriver",
            "type": "string",
            "format": "--volume-driver {value}",
            "help": "Optional volume driver for the container."
          },
          {
            "name": "VolumesFrom",
            "type": "List<string>",
            "format": "--volumes-from {value}",
            "help": "Mount volumes from the specified container(s)."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "[COMMAND]"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "Update a service.",
      "postfix": "ServiceUpdate",
      "definiteArgument": "service update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Args",
            "type": "string",
            "format": "--args {value}",
            "help": "Service command args."
          },
          {
            "name": "ConfigAdd",
            "type": "string",
            "format": "--config-add {value}",
            "help": "Add or update a config file on a service."
          },
          {
            "name": "ConfigRm",
            "type": "List<string>",
            "format": "--config-rm {value}",
            "help": "Remove a configuration file."
          },
          {
            "name": "ConstraintAdd",
            "type": "List<string>",
            "format": "--constraint-add {value}",
            "help": "Add or update a placement constraint."
          },
          {
            "name": "ConstraintRm",
            "type": "List<string>",
            "format": "--constraint-rm {value}",
            "help": "Remove a constraint."
          },
          {
            "name": "ContainerLabelAdd",
            "type": "List<string>",
            "format": "--container-label-add {value}",
            "help": "Add or update a container label."
          },
          {
            "name": "ContainerLabelRm",
            "type": "List<string>",
            "format": "--container-label-rm {value}",
            "help": "Remove a container label by its key."
          },
          {
            "name": "CredentialSpec",
            "type": "string",
            "format": "--credential-spec {value}",
            "help": "Credential spec for managed service account (Windows only)."
          },
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Exit immediately instead of waiting for the service to converge."
          },
          {
            "name": "DnsAdd",
            "type": "List<string>",
            "format": "--dns-add {value}",
            "help": "Add or update a custom DNS server."
          },
          {
            "name": "DnsOptionAdd",
            "type": "List<string>",
            "format": "--dns-option-add {value}",
            "help": "Add or update a DNS option."
          },
          {
            "name": "DnsOptionRm",
            "type": "List<string>",
            "format": "--dns-option-rm {value}",
            "help": "Remove a DNS option."
          },
          {
            "name": "DnsRm",
            "type": "List<string>",
            "format": "--dns-rm {value}",
            "help": "Remove a custom DNS server."
          },
          {
            "name": "DnsSearchAdd",
            "type": "List<string>",
            "format": "--dns-search-add {value}",
            "help": "Add or update a custom DNS search domain."
          },
          {
            "name": "DnsSearchRm",
            "type": "List<string>",
            "format": "--dns-search-rm {value}",
            "help": "Remove a DNS search domain."
          },
          {
            "name": "EndpointMode",
            "type": "string",
            "format": "--endpoint-mode {value}",
            "help": "Endpoint mode (vip or dnsrr)."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "EnvAdd",
            "type": "List<string>",
            "format": "--env-add {value}",
            "help": "Add or update an environment variable."
          },
          {
            "name": "EnvRm",
            "type": "List<string>",
            "format": "--env-rm {value}",
            "help": "Remove an environment variable."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force update even if no changes require it."
          },
          {
            "name": "GenericResourceAdd",
            "type": "List<string>",
            "format": "--generic-resource-add {value}",
            "help": "Add a Generic resource."
          },
          {
            "name": "GenericResourceRm",
            "type": "List<string>",
            "format": "--generic-resource-rm {value}",
            "help": "Remove a Generic resource."
          },
          {
            "name": "GroupAdd",
            "type": "List<string>",
            "format": "--group-add {value}",
            "help": "Add an additional supplementary user group to the container."
          },
          {
            "name": "GroupRm",
            "type": "List<string>",
            "format": "--group-rm {value}",
            "help": "Remove a previously added supplementary user group from the container."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h)."
          },
          {
            "name": "HostAdd",
            "type": "List<string>",
            "format": "--host-add {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "HostRm",
            "type": "List<string>",
            "format": "--host-rm {value}",
            "help": "Remove a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container hostname."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "--image {value}",
            "help": "Service image tag."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Use an init inside each service container to forward signals and reap processes."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Service container isolation mode."
          },
          {
            "name": "LabelAdd",
            "type": "List<string>",
            "format": "--label-add {value}",
            "help": "Add or update a service label."
          },
          {
            "name": "LabelRm",
            "type": "List<string>",
            "format": "--label-rm {value}",
            "help": "Remove a label by its key."
          },
          {
            "name": "LimitCpu",
            "type": "decimal?",
            "format": "--limit-cpu {value}",
            "help": "Limit CPUs."
          },
          {
            "name": "LimitMemory",
            "type": "long?",
            "format": "--limit-memory {value}",
            "help": "Limit Memory."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for service."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Logging driver options."
          },
          {
            "name": "MountAdd",
            "type": "string",
            "format": "--mount-add {value}",
            "help": "Add or update a mount on a service."
          },
          {
            "name": "MountRm",
            "type": "List<string>",
            "format": "--mount-rm {value}",
            "help": "Remove a mount by its target path."
          },
          {
            "name": "NetworkAdd",
            "type": "string",
            "format": "--network-add {value}",
            "help": "Add a network."
          },
          {
            "name": "NetworkRm",
            "type": "List<string>",
            "format": "--network-rm {value}",
            "help": "Remove a network."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "NoResolveImage",
            "type": "bool",
            "format": "--no-resolve-image",
            "help": "Do not query the registry to resolve image digest and supported platforms."
          },
          {
            "name": "PlacementPrefAdd",
            "type": "string",
            "format": "--placement-pref-add {value}",
            "help": "Add a placement preference."
          },
          {
            "name": "PlacementPrefRm",
            "type": "string",
            "format": "--placement-pref-rm {value}",
            "help": "Remove a placement preference."
          },
          {
            "name": "PublishAdd",
            "type": "string",
            "format": "--publish-add {value}",
            "help": "Add or update a published port."
          },
          {
            "name": "PublishRm",
            "type": "string",
            "format": "--publish-rm {value}",
            "help": "Remove a published port by its target port."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress progress output."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Replicas",
            "type": "int",
            "format": "--replicas {value}",
            "help": "Number of tasks."
          },
          {
            "name": "ReplicasMaxPerNode",
            "type": "int",
            "format": "--replicas-max-per-node {value}",
            "help": "Maximum number of tasks per node (default 0 = unlimited)."
          },
          {
            "name": "ReserveCpu",
            "type": "decimal?",
            "format": "--reserve-cpu {value}",
            "help": "Reserve CPUs."
          },
          {
            "name": "ReserveMemory",
            "type": "long?",
            "format": "--reserve-memory {value}",
            "help": "Reserve Memory."
          },
          {
            "name": "RestartCondition",
            "type": "RestartCondition",
            "format": "--restart-condition {value}",
            "help": "Restart when condition is met (\"none\"|\"on-failure\"|\"any\")."
          },
          {
            "name": "RestartDelay",
            "type": "string",
            "format": "--restart-delay {value}",
            "help": "Delay between restart attempts (ns|us|ms|s|m|h)."
          },
          {
            "name": "RestartMaxAttempts",
            "type": "int",
            "format": "--restart-max-attempts {value}",
            "help": "Maximum number of restarts before giving up."
          },
          {
            "name": "RestartWindow",
            "type": "string",
            "format": "--restart-window {value}",
            "help": "Window used to evaluate the restart policy (ns|us|ms|s|m|h)."
          },
          {
            "name": "Rollback",
            "type": "bool",
            "format": "--rollback",
            "help": "Rollback to previous specification."
          },
          {
            "name": "RollbackDelay",
            "type": "string",
            "format": "--rollback-delay {value}",
            "help": "Delay between task rollbacks (ns|us|ms|s|m|h)."
          },
          {
            "name": "RollbackFailureAction",
            "type": "RollbackFailureAction",
            "format": "--rollback-failure-action {value}",
            "help": "Action on rollback failure (\"pause\"|\"continue\")."
          },
          {
            "name": "RollbackMaxFailureRatio",
            "type": "float",
            "format": "--rollback-max-failure-ratio {value}",
            "help": "Failure rate to tolerate during a rollback."
          },
          {
            "name": "RollbackMonitor",
            "type": "string",
            "format": "--rollback-monitor {value}",
            "help": "Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)."
          },
          {
            "name": "RollbackOrder",
            "type": "RollbackOrder",
            "format": "--rollback-order {value}",
            "help": "Rollback order (\"start-first\"|\"stop-first\")."
          },
          {
            "name": "RollbackParallelism",
            "type": "int",
            "format": "--rollback-parallelism {value}",
            "help": "Maximum number of tasks rolled back simultaneously (0 to roll back all at once)."
          },
          {
            "name": "SecretAdd",
            "type": "string",
            "format": "--secret-add {value}",
            "help": "Add or update a secret on a service."
          },
          {
            "name": "SecretRm",
            "type": "List<string>",
            "format": "--secret-rm {value}",
            "help": "Remove a secret."
          },
          {
            "name": "StopGracePeriod",
            "type": "string",
            "format": "--stop-grace-period {value}",
            "help": "Time to wait before force killing a container (ns|us|ms|s|m|h)."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop the container."
          },
          {
            "name": "SysctlAdd",
            "type": "List<string>",
            "format": "--sysctl-add {value}",
            "help": "Add or update a Sysctl option."
          },
          {
            "name": "SysctlRm",
            "type": "List<string>",
            "format": "--sysctl-rm {value}",
            "help": "Remove a Sysctl option."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "UpdateDelay",
            "type": "string",
            "format": "--update-delay {value}",
            "help": "Delay between updates (ns|us|ms|s|m|h)."
          },
          {
            "name": "UpdateFailureAction",
            "type": "UpdateFailureAction",
            "format": "--update-failure-action {value}",
            "help": "Action on update failure (\"pause\"|\"continue\"|\"rollback\")."
          },
          {
            "name": "UpdateMaxFailureRatio",
            "type": "float",
            "format": "--update-max-failure-ratio {value}",
            "help": "Failure rate to tolerate during an update."
          },
          {
            "name": "UpdateMonitor",
            "type": "string",
            "format": "--update-monitor {value}",
            "help": "Duration after each task update to monitor for failure (ns|us|ms|s|m|h)."
          },
          {
            "name": "UpdateOrder",
            "type": "UpdateOrder",
            "format": "--update-order {value}",
            "help": "Update order (\"start-first\"|\"stop-first\")."
          },
          {
            "name": "UpdateParallelism",
            "type": "int",
            "format": "--update-parallelism {value}",
            "help": "Maximum number of tasks updated simultaneously (0 to update all at once)."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "WithRegistryAuth",
            "type": "bool",
            "format": "--with-registry-auth",
            "help": "Send registry authentication details to swarm agents."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Service",
            "type": "string",
            "format": "{value}",
            "help": "SERVICE"
          }
        ]
      }
    },
    {
      "help": "List port mappings or a specific mapping for the container.",
      "postfix": "Port",
      "definiteArgument": "port",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "PrivatePort",
            "type": "string",
            "format": "{value}",
            "help": "[PRIVATE_PORT[/PROTO]]"
          }
        ]
      }
    },
    {
      "help": "Manage containers.",
      "postfix": "Container",
      "definiteArgument": "container",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Push an image or a repository to a registry.",
      "postfix": "ImagePush",
      "definiteArgument": "image push",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image signing."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more services.",
      "postfix": "ServiceInspect",
      "definiteArgument": "service inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Pretty",
            "type": "bool",
            "format": "--pretty",
            "help": "Print the information in a human friendly format."
          },
          {
            "name": "Services",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "SERVICE"
          }
        ]
      }
    },
    {
      "help": "Connect a container to a network.",
      "postfix": "NetworkConnect",
      "definiteArgument": "network connect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Alias",
            "type": "List<string>",
            "format": "--alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "DriverOpt",
            "type": "List<string>",
            "format": "--driver-opt {value}",
            "help": "driver options for the network."
          },
          {
            "name": "Ip",
            "type": "string",
            "format": "--ip {value}",
            "help": "IPv4 address (e.g., 172.30.100.104)."
          },
          {
            "name": "Ip6",
            "type": "string",
            "format": "--ip6 {value}",
            "help": "IPv6 address (e.g., 2001:db8::33)."
          },
          {
            "name": "Link",
            "type": "List<string>",
            "format": "--link {value}",
            "help": "Add link to another container."
          },
          {
            "name": "LinkLocalIp",
            "type": "List<string>",
            "format": "--link-local-ip {value}",
            "help": "Add a link-local address for the container."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "{value}",
            "help": "NETWORK"
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "List secrets.",
      "postfix": "SecretLs",
      "definiteArgument": "secret ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print secrets using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display IDs."
          }
        ]
      }
    },
    {
      "help": "Leave the swarm.",
      "postfix": "SwarmLeave",
      "definiteArgument": "swarm leave",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force this node to leave the swarm, ignoring warnings."
          }
        ]
      }
    },
    {
      "help": "List images.",
      "postfix": "Images",
      "definiteArgument": "images",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all images (default hides intermediate images)."
          },
          {
            "name": "Digests",
            "type": "bool",
            "format": "--digests",
            "help": "Show digests."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only show numeric IDs."
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "Update a local engine.",
      "postfix": "EngineUpdate",
      "definiteArgument": "engine update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containerd",
            "type": "string",
            "format": "--containerd {value}",
            "help": "override default location of containerd endpoint."
          },
          {
            "name": "EngineImage",
            "type": "string",
            "format": "--engine-image {value}",
            "help": "Specify engine image (default uses the same image as currently running)."
          },
          {
            "name": "RegistryPrefix",
            "type": "string",
            "format": "--registry-prefix {value}",
            "help": "Override the current location where engine images are pulled."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "Specify engine version."
          }
        ]
      }
    },
    {
      "help": "Get real time events from the server.",
      "postfix": "SystemEvents",
      "definiteArgument": "system events",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Since",
            "type": "string",
            "format": "--since {value}",
            "help": "Show all events created since timestamp."
          },
          {
            "name": "Until",
            "type": "string",
            "format": "--until {value}",
            "help": "Stream events until this timestamp."
          }
        ]
      }
    },
    {
      "help": "Return low-level information on Docker objects.",
      "postfix": "Inspect",
      "definiteArgument": "inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Size",
            "type": "bool",
            "format": "--size",
            "help": "Display total file sizes if the type is container."
          },
          {
            "name": "Type",
            "type": "string",
            "format": "--type {value}",
            "help": "Return JSON for specified type."
          },
          {
            "name": "Names",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NAME|ID"
          }
        ]
      }
    },
    {
      "help": "Check for available engine updates.",
      "postfix": "EngineCheck",
      "definiteArgument": "engine check",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containerd",
            "type": "string",
            "format": "--containerd {value}",
            "help": "override default location of containerd endpoint."
          },
          {
            "name": "Downgrades",
            "type": "bool",
            "format": "--downgrades",
            "help": "Report downgrades (default omits older versions)."
          },
          {
            "name": "EngineImage",
            "type": "string",
            "format": "--engine-image {value}",
            "help": "Specify engine image (default uses the same image as currently running)."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print updates using a Go template."
          },
          {
            "name": "PreReleases",
            "type": "bool",
            "format": "--pre-releases",
            "help": "Include pre-release versions."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display available versions."
          },
          {
            "name": "RegistryPrefix",
            "type": "string",
            "format": "--registry-prefix {value}",
            "help": "Override the existing location where engine images are pulled."
          },
          {
            "name": "Upgrades",
            "type": "bool",
            "format": "--upgrades",
            "help": "Report available upgrades."
          }
        ]
      }
    },
    {
      "help": "Attach local standard input, output, and error streams to a running container.",
      "postfix": "Attach",
      "definiteArgument": "attach",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "NoStdin",
            "type": "bool",
            "format": "--no-stdin",
            "help": "Do not attach STDIN."
          },
          {
            "name": "SigProxy",
            "type": "bool",
            "format": "--sig-proxy",
            "help": "Proxy all received signals to the process."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Block until one or more containers stop, then print their exit codes.",
      "postfix": "ContainerWait",
      "definiteArgument": "container wait",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Display and rotate the root CA.",
      "postfix": "SwarmCa",
      "definiteArgument": "swarm ca",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "CaCert",
            "type": "string",
            "format": "--ca-cert {value}",
            "help": "Path to the PEM-formatted root CA certificate to use for the new cluster."
          },
          {
            "name": "CaKey",
            "type": "string",
            "format": "--ca-key {value}",
            "help": "Path to the PEM-formatted root CA key to use for the new cluster."
          },
          {
            "name": "CertExpiry",
            "type": "string",
            "format": "--cert-expiry {value}",
            "help": "Validity period for node certificates (ns|us|ms|s|m|h)."
          },
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Exit immediately instead of waiting for the root rotation to converge."
          },
          {
            "name": "ExternalCa",
            "type": "string",
            "format": "--external-ca {value}",
            "help": "Specifications of one or more certificate signing endpoints."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress progress output."
          },
          {
            "name": "Rotate",
            "type": "bool",
            "format": "--rotate",
            "help": "Rotate the swarm CA - if no certificate or key are provided, new ones will be generated."
          }
        ]
      }
    },
    {
      "help": "Manage the docker engine.",
      "postfix": "Engine",
      "definiteArgument": "engine",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "COMMAND"
          }
        ]
      }
    },
    {
      "help": "Remove unused data.",
      "postfix": "SystemPrune",
      "definiteArgument": "system prune",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Remove all unused images not just dangling ones."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'label=&lt;key&gt;=&lt;value&gt;')."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation."
          },
          {
            "name": "Volumes",
            "type": "bool",
            "format": "--volumes",
            "help": "Prune volumes."
          }
        ]
      }
    },
    {
      "help": "Manage builds.",
      "postfix": "Builder",
      "definiteArgument": "builder",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Pause all processes within one or more containers.",
      "postfix": "ContainerPause",
      "definiteArgument": "container pause",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Create a new image from a container's changes.",
      "postfix": "ContainerCommit",
      "definiteArgument": "container commit",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Author",
            "type": "string",
            "format": "--author {value}",
            "help": "Author (e.g., \"John Hannibal Smith &lt;hannibal@a-team.com&gt;\")."
          },
          {
            "name": "Change",
            "type": "List<string>",
            "format": "--change {value}",
            "help": "Apply Dockerfile instruction to the created image."
          },
          {
            "name": "Message",
            "type": "string",
            "format": "--message {value}",
            "help": "Commit message."
          },
          {
            "name": "Pause",
            "type": "bool",
            "format": "--pause",
            "help": "Pause container during commit."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "List contexts.",
      "postfix": "ContextLs",
      "definiteArgument": "context ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print contexts using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only show context names."
          }
        ]
      }
    },
    {
      "help": "Remove one or more contexts.",
      "postfix": "ContextRm",
      "definiteArgument": "context rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Contexts",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTEXT"
          }
        ]
      }
    },
    {
      "help": "List the tasks in the stack.",
      "postfix": "StackPs",
      "definiteArgument": "stack ps",
      "settingsClass": {
        "baseClass": "DockerStackSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print tasks using a Go template."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Kubernetes namespace to use."
          },
          {
            "name": "NoResolve",
            "type": "bool",
            "format": "--no-resolve",
            "help": "Do not map IDs to Names."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display task IDs."
          },
          {
            "name": "Stack",
            "type": "string",
            "format": "{value}",
            "help": "STACK"
          }
        ]
      }
    },
    {
      "help": "Create a new container.",
      "postfix": "ContainerCreate",
      "definiteArgument": "container create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "Attach",
            "type": "List<string>",
            "format": "--attach {value}",
            "help": "Attach to STDIN, STDOUT or STDERR."
          },
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "BlkioWeightDevice",
            "type": "List<string>",
            "format": "--blkio-weight-device {value}",
            "help": "Block IO weight (relative device weight)."
          },
          {
            "name": "CapAdd",
            "type": "List<string>",
            "format": "--cap-add {value}",
            "help": "Add Linux capabilities."
          },
          {
            "name": "CapDrop",
            "type": "List<string>",
            "format": "--cap-drop {value}",
            "help": "Drop Linux capabilities."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Cidfile",
            "type": "string",
            "format": "--cidfile {value}",
            "help": "Write the container ID to the file."
          },
          {
            "name": "CpuCount",
            "type": "long?",
            "format": "--cpu-count {value}",
            "help": "CPU count (Windows only)."
          },
          {
            "name": "CpuPercent",
            "type": "long?",
            "format": "--cpu-percent {value}",
            "help": "CPU percent (Windows only)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "Device",
            "type": "List<string>",
            "format": "--device {value}",
            "help": "Add a host device to the container."
          },
          {
            "name": "DeviceCgroupRule",
            "type": "List<string>",
            "format": "--device-cgroup-rule {value}",
            "help": "Add a rule to the cgroup allowed devices list."
          },
          {
            "name": "DeviceReadBps",
            "type": "List<string>",
            "format": "--device-read-bps {value}",
            "help": "Limit read rate (bytes per second) from a device."
          },
          {
            "name": "DeviceReadIops",
            "type": "List<string>",
            "format": "--device-read-iops {value}",
            "help": "Limit read rate (IO per second) from a device."
          },
          {
            "name": "DeviceWriteBps",
            "type": "List<string>",
            "format": "--device-write-bps {value}",
            "help": "Limit write rate (bytes per second) to a device."
          },
          {
            "name": "DeviceWriteIops",
            "type": "List<string>",
            "format": "--device-write-iops {value}",
            "help": "Limit write rate (IO per second) to a device."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Dns",
            "type": "List<string>",
            "format": "--dns {value}",
            "help": "Set custom DNS servers."
          },
          {
            "name": "DnsOpt",
            "type": "List<string>",
            "format": "--dns-opt {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsOption",
            "type": "List<string>",
            "format": "--dns-option {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsSearch",
            "type": "List<string>",
            "format": "--dns-search {value}",
            "help": "Set custom DNS search domains."
          },
          {
            "name": "Domainname",
            "type": "string",
            "format": "--domainname {value}",
            "help": "Container NIS domain name."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "EnvFile",
            "type": "List<string>",
            "format": "--env-file {value}",
            "help": "Read in a file of environment variables."
          },
          {
            "name": "Expose",
            "type": "List<string>",
            "format": "--expose {value}",
            "help": "Expose a port or a range of ports."
          },
          {
            "name": "Gpus",
            "type": "string",
            "format": "--gpus {value}",
            "help": "GPU devices to add to the container ('all' to pass all GPUs)."
          },
          {
            "name": "GroupAdd",
            "type": "List<string>",
            "format": "--group-add {value}",
            "help": "Add additional groups to join."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)."
          },
          {
            "name": "Help",
            "type": "bool",
            "format": "--help",
            "help": "Print usage."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container host name."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Run an init inside the container that forwards signals and reaps processes."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "IoMaxbandwidth",
            "type": "long?",
            "format": "--io-maxbandwidth {value}",
            "help": "Maximum IO bandwidth limit for the system drive (Windows only)."
          },
          {
            "name": "IoMaxiops",
            "type": "int",
            "format": "--io-maxiops {value}",
            "help": "Maximum IOps limit for the system drive (Windows only)."
          },
          {
            "name": "Ip",
            "type": "string",
            "format": "--ip {value}",
            "help": "IPv4 address (e.g., 172.30.100.104)."
          },
          {
            "name": "Ip6",
            "type": "string",
            "format": "--ip6 {value}",
            "help": "IPv6 address (e.g., 2001:db8::33)."
          },
          {
            "name": "Ipc",
            "type": "string",
            "format": "--ipc {value}",
            "help": "IPC mode to use."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set meta data on a container."
          },
          {
            "name": "LabelFile",
            "type": "List<string>",
            "format": "--label-file {value}",
            "help": "Read in a line delimited file of labels."
          },
          {
            "name": "Link",
            "type": "List<string>",
            "format": "--link {value}",
            "help": "Add link to another container."
          },
          {
            "name": "LinkLocalIp",
            "type": "List<string>",
            "format": "--link-local-ip {value}",
            "help": "Container IPv4/IPv6 link-local addresses."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for the container."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Log driver options."
          },
          {
            "name": "MacAddress",
            "type": "string",
            "format": "--mac-address {value}",
            "help": "Container MAC address (e.g., 92:d0:c6:0a:29:33)."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "MemorySwappiness",
            "type": "long?",
            "format": "--memory-swappiness {value}",
            "help": "Tune container memory swappiness (0 to 100)."
          },
          {
            "name": "Mount",
            "type": "string",
            "format": "--mount {value}",
            "help": "Attach a filesystem mount to the container."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Assign a name to the container."
          },
          {
            "name": "Net",
            "type": "string",
            "format": "--net {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetAlias",
            "type": "List<string>",
            "format": "--net-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetworkAlias",
            "type": "List<string>",
            "format": "--network-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "OomKillDisable",
            "type": "bool",
            "format": "--oom-kill-disable",
            "help": "Disable OOM Killer."
          },
          {
            "name": "OomScoreAdj",
            "type": "int",
            "format": "--oom-score-adj {value}",
            "help": "Tune host's OOM preferences (-1000 to 1000)."
          },
          {
            "name": "Pid",
            "type": "string",
            "format": "--pid {value}",
            "help": "PID namespace to use."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to this container."
          },
          {
            "name": "Publish",
            "type": "List<string>",
            "format": "--publish {value}",
            "help": "Publish a container's port(s) to the host."
          },
          {
            "name": "PublishAll",
            "type": "bool",
            "format": "--publish-all",
            "help": "Publish all exposed ports to random ports."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Automatically remove the container when it exits."
          },
          {
            "name": "Runtime",
            "type": "string",
            "format": "--runtime {value}",
            "help": "Runtime to use for this container."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security Options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop a container."
          },
          {
            "name": "StopTimeout",
            "type": "int",
            "format": "--stop-timeout {value}",
            "help": "Timeout (in seconds) to stop a container."
          },
          {
            "name": "StorageOpt",
            "type": "List<string>",
            "format": "--storage-opt {value}",
            "help": "Storage driver options for the container."
          },
          {
            "name": "Sysctl",
            "type": "Dictionary<string,string>",
            "format": "--sysctl {value}",
            "itemFormat": "{key}:{value}",
            "help": "Sysctl options."
          },
          {
            "name": "Tmpfs",
            "type": "List<string>",
            "format": "--tmpfs {value}",
            "help": "Mount a tmpfs directory."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Userns",
            "type": "string",
            "format": "--userns {value}",
            "help": "User namespace to use."
          },
          {
            "name": "Uts",
            "type": "string",
            "format": "--uts {value}",
            "help": "UTS namespace to use."
          },
          {
            "name": "Volume",
            "type": "List<string>",
            "format": "--volume {value}",
            "help": "Bind mount a volume."
          },
          {
            "name": "VolumeDriver",
            "type": "string",
            "format": "--volume-driver {value}",
            "help": "Optional volume driver for the container."
          },
          {
            "name": "VolumesFrom",
            "type": "List<string>",
            "format": "--volumes-from {value}",
            "help": "Mount volumes from the specified container(s)."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "[COMMAND]"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "Create a volume.",
      "postfix": "VolumeCreate",
      "definiteArgument": "volume create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Driver",
            "type": "string",
            "format": "--driver {value}",
            "help": "Specify volume driver name."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set metadata for a volume."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Specify volume name."
          },
          {
            "name": "Opt",
            "type": "Dictionary<string,string>",
            "format": "--opt {value}",
            "itemFormat": "{key}:{value}",
            "help": "Set driver specific options."
          },
          {
            "name": "Volume",
            "type": "string",
            "format": "{value}",
            "help": "[VOLUME]"
          }
        ]
      }
    },
    {
      "help": "Manage plugins.",
      "postfix": "Plugin",
      "definiteArgument": "plugin",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Log in to a Docker registry.",
      "postfix": "Login",
      "definiteArgument": "login",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Password",
            "type": "string",
            "format": "--password {value}",
            "secret": true,
            "help": "Password."
          },
          {
            "name": "Username",
            "type": "string",
            "format": "--username {value}",
            "help": "Username."
          },
          {
            "name": "Server",
            "type": "string",
            "format": "{value}",
            "help": "[SERVER]"
          }
        ]
      }
    },
    {
      "help": "Manage the unlock key.",
      "postfix": "SwarmUnlockKey",
      "definiteArgument": "swarm unlock-key",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display token."
          },
          {
            "name": "Rotate",
            "type": "bool",
            "format": "--rotate",
            "help": "Rotate unlock key."
          }
        ]
      }
    },
    {
      "help": "Start one or more stopped containers.",
      "postfix": "Start",
      "definiteArgument": "start",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Attach",
            "type": "bool",
            "format": "--attach",
            "help": "Attach STDOUT/STDERR and forward signals."
          },
          {
            "name": "Checkpoint",
            "type": "string",
            "format": "--checkpoint {value}",
            "help": "Restore from this checkpoint."
          },
          {
            "name": "CheckpointDir",
            "type": "string",
            "format": "--checkpoint-dir {value}",
            "help": "Use a custom checkpoint storage directory."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Attach container's STDIN."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Initialize a swarm.",
      "postfix": "SwarmInit",
      "definiteArgument": "swarm init",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AdvertiseAddr",
            "type": "string",
            "format": "--advertise-addr {value}",
            "help": "Advertised address (format: &lt;ip|interface&gt;[:port])."
          },
          {
            "name": "Autolock",
            "type": "bool",
            "format": "--autolock",
            "help": "Enable manager autolocking (requiring an unlock key to start a stopped manager)."
          },
          {
            "name": "Availability",
            "type": "Availability",
            "format": "--availability {value}",
            "help": "Availability of the node (\"active\"|\"pause\"|\"drain\")."
          },
          {
            "name": "CertExpiry",
            "type": "string",
            "format": "--cert-expiry {value}",
            "help": "Validity period for node certificates (ns|us|ms|s|m|h)."
          },
          {
            "name": "DataPathAddr",
            "type": "string",
            "format": "--data-path-addr {value}",
            "help": "Address or interface to use for data path traffic (format: &lt;ip|interface&gt;)."
          },
          {
            "name": "DataPathPort",
            "type": "string",
            "format": "--data-path-port {value}",
            "help": "Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used."
          },
          {
            "name": "DefaultAddrPool",
            "type": "string",
            "format": "--default-addr-pool {value}",
            "help": "default address pool in CIDR format."
          },
          {
            "name": "DefaultAddrPoolMaskLength",
            "type": "string",
            "format": "--default-addr-pool-mask-length {value}",
            "help": "default address pool subnet mask length."
          },
          {
            "name": "DispatcherHeartbeat",
            "type": "string",
            "format": "--dispatcher-heartbeat {value}",
            "help": "Dispatcher heartbeat period (ns|us|ms|s|m|h)."
          },
          {
            "name": "ExternalCa",
            "type": "string",
            "format": "--external-ca {value}",
            "help": "Specifications of one or more certificate signing endpoints."
          },
          {
            "name": "ForceNewCluster",
            "type": "bool",
            "format": "--force-new-cluster",
            "help": "Force create a new cluster from current state."
          },
          {
            "name": "ListenAddr",
            "type": "string",
            "format": "--listen-addr {value}",
            "help": "Listen address (format: &lt;ip|interface&gt;[:port])."
          },
          {
            "name": "MaxSnapshots",
            "type": "int",
            "format": "--max-snapshots {value}",
            "help": "Number of additional Raft snapshots to retain."
          },
          {
            "name": "SnapshotInterval",
            "type": "int",
            "format": "--snapshot-interval {value}",
            "help": "Number of log entries between Raft snapshots."
          },
          {
            "name": "TaskHistoryLimit",
            "type": "long?",
            "format": "--task-history-limit {value}",
            "help": "Task history retention limit."
          }
        ]
      }
    },
    {
      "help": "Inspect changes to files or directories on a container's filesystem.",
      "postfix": "ContainerDiff",
      "definiteArgument": "container diff",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Restart one or more containers.",
      "postfix": "ContainerRestart",
      "definiteArgument": "container restart",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Time",
            "type": "int",
            "format": "--time {value}",
            "help": "Seconds to wait for stop before killing the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Manage Docker configs.",
      "postfix": "Config",
      "definiteArgument": "config",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Disable a plugin.",
      "postfix": "PluginDisable",
      "definiteArgument": "plugin disable",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the disable of an active plugin."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          }
        ]
      }
    },
    {
      "help": "Unpause all processes within one or more containers.",
      "postfix": "ContainerUnpause",
      "definiteArgument": "container unpause",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Import a context from a tar or zip file.",
      "postfix": "ContextImport",
      "definiteArgument": "context import",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "CONTEXT"
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "FILE|-"
          }
        ]
      }
    },
    {
      "help": "Remove one or more containers.",
      "postfix": "Rm",
      "definiteArgument": "rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the removal of a running container (uses SIGKILL)."
          },
          {
            "name": "Link",
            "type": "bool",
            "format": "--link",
            "help": "Remove the specified link."
          },
          {
            "name": "Volumes",
            "type": "bool",
            "format": "--volumes",
            "help": "Remove the volumes associated with the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Deploy a new stack or update an existing stack.",
      "postfix": "Deploy",
      "definiteArgument": "deploy",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "BundleFile",
            "type": "string",
            "format": "--bundle-file {value}",
            "help": "Path to a Distributed Application Bundle file."
          },
          {
            "name": "ComposeFile",
            "type": "List<string>",
            "format": "--compose-file {value}",
            "help": "Path to a Compose file, or \"-\" to read from stdin."
          },
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Kubernetes namespace to use."
          },
          {
            "name": "Prune",
            "type": "bool",
            "format": "--prune",
            "help": "Prune services that are no longer referenced."
          },
          {
            "name": "ResolveImage",
            "type": "ResolveImage",
            "format": "--resolve-image {value}",
            "help": "Query the registry to resolve image digest and supported platforms (\"always\"|\"changed\"|\"never\")."
          },
          {
            "name": "WithRegistryAuth",
            "type": "bool",
            "format": "--with-registry-auth",
            "help": "Send registry authentication details to Swarm agents."
          },
          {
            "name": "Stack",
            "type": "string",
            "format": "{value}",
            "help": "STACK"
          }
        ]
      }
    },
    {
      "help": "Remove one or more nodes from the swarm.",
      "postfix": "NodeRm",
      "definiteArgument": "node rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force remove a node from the swarm."
          },
          {
            "name": "Nodes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NODE"
          }
        ]
      }
    },
    {
      "help": "Remove a checkpoint.",
      "postfix": "CheckpointRm",
      "definiteArgument": "checkpoint rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "CheckpointDir",
            "type": "string",
            "format": "--checkpoint-dir {value}",
            "help": "Use a custom checkpoint storage directory."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Checkpoint",
            "type": "string",
            "format": "{value}",
            "help": "CHECKPOINT"
          }
        ]
      }
    },
    {
      "help": "Push an image or a repository to a registry.",
      "postfix": "Push",
      "definiteArgument": "push",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image signing."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Create a network.",
      "postfix": "NetworkCreate",
      "definiteArgument": "network create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Attachable",
            "type": "bool",
            "format": "--attachable",
            "help": "Enable manual container attachment."
          },
          {
            "name": "AuxAddress",
            "type": "Dictionary<string,string>",
            "format": "--aux-address {value}",
            "itemFormat": "{key}:{value}",
            "help": "Auxiliary IPv4 or IPv6 addresses used by Network driver."
          },
          {
            "name": "ConfigFrom",
            "type": "string",
            "format": "--config-from {value}",
            "help": "The network from which copying the configuration."
          },
          {
            "name": "ConfigOnly",
            "type": "bool",
            "format": "--config-only",
            "help": "Create a configuration only network."
          },
          {
            "name": "Driver",
            "type": "string",
            "format": "--driver {value}",
            "help": "Driver to manage the Network."
          },
          {
            "name": "Gateway",
            "type": "List<string>",
            "format": "--gateway {value}",
            "help": "IPv4 or IPv6 Gateway for the master subnet."
          },
          {
            "name": "Ingress",
            "type": "bool",
            "format": "--ingress",
            "help": "Create swarm routing-mesh network."
          },
          {
            "name": "Internal",
            "type": "bool",
            "format": "--internal",
            "help": "Restrict external access to the network."
          },
          {
            "name": "IpRange",
            "type": "List<string>",
            "format": "--ip-range {value}",
            "help": "Allocate container ip from a sub-range."
          },
          {
            "name": "IpamDriver",
            "type": "string",
            "format": "--ipam-driver {value}",
            "help": "IP Address Management Driver."
          },
          {
            "name": "IpamOpt",
            "type": "Dictionary<string,string>",
            "format": "--ipam-opt {value}",
            "itemFormat": "{key}:{value}",
            "help": "Set IPAM driver specific options."
          },
          {
            "name": "Ipv6",
            "type": "bool",
            "format": "--ipv6",
            "help": "Enable IPv6 networking."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set metadata on a network."
          },
          {
            "name": "Opt",
            "type": "Dictionary<string,string>",
            "format": "--opt {value}",
            "itemFormat": "{key}:{value}",
            "help": "Set driver specific options."
          },
          {
            "name": "Scope",
            "type": "string",
            "format": "--scope {value}",
            "help": "Control the network's scope."
          },
          {
            "name": "Subnet",
            "type": "List<string>",
            "format": "--subnet {value}",
            "help": "Subnet in CIDR format that represents a network segment."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "{value}",
            "help": "NETWORK"
          }
        ]
      }
    },
    {
      "help": "List volumes.",
      "postfix": "VolumeLs",
      "definiteArgument": "volume ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'dangling=true')."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print volumes using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display volume names."
          }
        ]
      }
    },
    {
      "help": "Return low-level information about keys and signatures.",
      "postfix": "TrustInspect",
      "definiteArgument": "trust inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more networks.",
      "postfix": "NetworkInspect",
      "definiteArgument": "network inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Verbose",
            "type": "bool",
            "format": "--verbose",
            "help": "Verbose output for diagnostics."
          },
          {
            "name": "Networks",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NETWORK"
          }
        ]
      }
    },
    {
      "help": "Activate Enterprise Edition.",
      "postfix": "EngineActivate",
      "definiteArgument": "engine activate",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containerd",
            "type": "string",
            "format": "--containerd {value}",
            "help": "override default location of containerd endpoint."
          },
          {
            "name": "DisplayOnly",
            "type": "bool",
            "format": "--display-only",
            "help": "only display license information and exit."
          },
          {
            "name": "EngineImage",
            "type": "string",
            "format": "--engine-image {value}",
            "help": "Specify engine image."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print licenses using a Go template."
          },
          {
            "name": "License",
            "type": "string",
            "format": "--license {value}",
            "help": "License File."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display available licenses by ID."
          },
          {
            "name": "RegistryPrefix",
            "type": "string",
            "format": "--registry-prefix {value}",
            "help": "Override the default location where engine images are pulled."
          },
          {
            "name": "Version",
            "type": "string",
            "format": "--version {value}",
            "help": "Specify engine version (default is to use currently running version)."
          }
        ]
      }
    },
    {
      "help": "Set the current docker context.",
      "postfix": "ContextUse",
      "definiteArgument": "context use",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "CONTEXT"
          }
        ]
      }
    },
    {
      "help": "Remove one or more volumes.",
      "postfix": "VolumeRm",
      "definiteArgument": "volume rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the removal of one or more volumes."
          },
          {
            "name": "Volumes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "VOLUME"
          }
        ]
      }
    },
    {
      "help": "Create a local manifest list for annotating and pushing to a registry.",
      "postfix": "ManifestCreate",
      "definiteArgument": "manifest create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "ManifestList",
            "type": "string",
            "format": "{value}",
            "help": "MANIFEST_LIST"
          },
          {
            "name": "Manifests",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "MANIFEST"
          }
        ]
      }
    },
    {
      "help": "Push a manifest list to a repository.",
      "postfix": "ManifestPush",
      "definiteArgument": "manifest push",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Insecure",
            "type": "bool",
            "format": "--insecure",
            "help": "Allow push to an insecure registry."
          },
          {
            "name": "Purge",
            "type": "bool",
            "format": "--purge",
            "help": "Remove the local manifest list after push."
          },
          {
            "name": "ManifestList",
            "type": "string",
            "format": "{value}",
            "help": "MANIFEST_LIST"
          }
        ]
      }
    },
    {
      "help": "Enable a plugin.",
      "postfix": "PluginEnable",
      "definiteArgument": "plugin enable",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Timeout",
            "type": "int",
            "format": "--timeout {value}",
            "help": "HTTP client timeout (in seconds)."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          }
        ]
      }
    },
    {
      "help": "Import the contents from a tarball to create a filesystem image.",
      "postfix": "Import",
      "definiteArgument": "import",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Change",
            "type": "List<string>",
            "format": "--change {value}",
            "help": "Apply Dockerfile instruction to the created image."
          },
          {
            "name": "Message",
            "type": "string",
            "format": "--message {value}",
            "help": "Set commit message for imported image."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "file|URL|-"
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "Run a command in a new container.",
      "postfix": "ContainerRun",
      "definiteArgument": "container run",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "Attach",
            "type": "List<string>",
            "format": "--attach {value}",
            "help": "Attach to STDIN, STDOUT or STDERR."
          },
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "BlkioWeightDevice",
            "type": "List<string>",
            "format": "--blkio-weight-device {value}",
            "help": "Block IO weight (relative device weight)."
          },
          {
            "name": "CapAdd",
            "type": "List<string>",
            "format": "--cap-add {value}",
            "help": "Add Linux capabilities."
          },
          {
            "name": "CapDrop",
            "type": "List<string>",
            "format": "--cap-drop {value}",
            "help": "Drop Linux capabilities."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Cidfile",
            "type": "string",
            "format": "--cidfile {value}",
            "help": "Write the container ID to the file."
          },
          {
            "name": "CpuCount",
            "type": "long?",
            "format": "--cpu-count {value}",
            "help": "CPU count (Windows only)."
          },
          {
            "name": "CpuPercent",
            "type": "long?",
            "format": "--cpu-percent {value}",
            "help": "CPU percent (Windows only)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Run container in background and print container ID."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Device",
            "type": "List<string>",
            "format": "--device {value}",
            "help": "Add a host device to the container."
          },
          {
            "name": "DeviceCgroupRule",
            "type": "List<string>",
            "format": "--device-cgroup-rule {value}",
            "help": "Add a rule to the cgroup allowed devices list."
          },
          {
            "name": "DeviceReadBps",
            "type": "List<string>",
            "format": "--device-read-bps {value}",
            "help": "Limit read rate (bytes per second) from a device."
          },
          {
            "name": "DeviceReadIops",
            "type": "List<string>",
            "format": "--device-read-iops {value}",
            "help": "Limit read rate (IO per second) from a device."
          },
          {
            "name": "DeviceWriteBps",
            "type": "List<string>",
            "format": "--device-write-bps {value}",
            "help": "Limit write rate (bytes per second) to a device."
          },
          {
            "name": "DeviceWriteIops",
            "type": "List<string>",
            "format": "--device-write-iops {value}",
            "help": "Limit write rate (IO per second) to a device."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Dns",
            "type": "List<string>",
            "format": "--dns {value}",
            "help": "Set custom DNS servers."
          },
          {
            "name": "DnsOpt",
            "type": "List<string>",
            "format": "--dns-opt {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsOption",
            "type": "List<string>",
            "format": "--dns-option {value}",
            "help": "Set DNS options."
          },
          {
            "name": "DnsSearch",
            "type": "List<string>",
            "format": "--dns-search {value}",
            "help": "Set custom DNS search domains."
          },
          {
            "name": "Domainname",
            "type": "string",
            "format": "--domainname {value}",
            "help": "Container NIS domain name."
          },
          {
            "name": "Entrypoint",
            "type": "string",
            "format": "--entrypoint {value}",
            "help": "Overwrite the default ENTRYPOINT of the image."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "EnvFile",
            "type": "List<string>",
            "format": "--env-file {value}",
            "help": "Read in a file of environment variables."
          },
          {
            "name": "Expose",
            "type": "List<string>",
            "format": "--expose {value}",
            "help": "Expose a port or a range of ports."
          },
          {
            "name": "Gpus",
            "type": "string",
            "format": "--gpus {value}",
            "help": "GPU devices to add to the container ('all' to pass all GPUs)."
          },
          {
            "name": "GroupAdd",
            "type": "List<string>",
            "format": "--group-add {value}",
            "help": "Add additional groups to join."
          },
          {
            "name": "HealthCmd",
            "type": "string",
            "format": "--health-cmd {value}",
            "help": "Command to run to check health."
          },
          {
            "name": "HealthInterval",
            "type": "string",
            "format": "--health-interval {value}",
            "help": "Time between running the check (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthRetries",
            "type": "int",
            "format": "--health-retries {value}",
            "help": "Consecutive failures needed to report unhealthy."
          },
          {
            "name": "HealthStartPeriod",
            "type": "string",
            "format": "--health-start-period {value}",
            "help": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)."
          },
          {
            "name": "HealthTimeout",
            "type": "string",
            "format": "--health-timeout {value}",
            "help": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)."
          },
          {
            "name": "Help",
            "type": "bool",
            "format": "--help",
            "help": "Print usage."
          },
          {
            "name": "Hostname",
            "type": "string",
            "format": "--hostname {value}",
            "help": "Container host name."
          },
          {
            "name": "Init",
            "type": "bool",
            "format": "--init",
            "help": "Run an init inside the container that forwards signals and reaps processes."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "IoMaxbandwidth",
            "type": "long?",
            "format": "--io-maxbandwidth {value}",
            "help": "Maximum IO bandwidth limit for the system drive (Windows only)."
          },
          {
            "name": "IoMaxiops",
            "type": "int",
            "format": "--io-maxiops {value}",
            "help": "Maximum IOps limit for the system drive (Windows only)."
          },
          {
            "name": "Ip",
            "type": "string",
            "format": "--ip {value}",
            "help": "IPv4 address (e.g., 172.30.100.104)."
          },
          {
            "name": "Ip6",
            "type": "string",
            "format": "--ip6 {value}",
            "help": "IPv6 address (e.g., 2001:db8::33)."
          },
          {
            "name": "Ipc",
            "type": "string",
            "format": "--ipc {value}",
            "help": "IPC mode to use."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set meta data on a container."
          },
          {
            "name": "LabelFile",
            "type": "List<string>",
            "format": "--label-file {value}",
            "help": "Read in a line delimited file of labels."
          },
          {
            "name": "Link",
            "type": "List<string>",
            "format": "--link {value}",
            "help": "Add link to another container."
          },
          {
            "name": "LinkLocalIp",
            "type": "List<string>",
            "format": "--link-local-ip {value}",
            "help": "Container IPv4/IPv6 link-local addresses."
          },
          {
            "name": "LogDriver",
            "type": "string",
            "format": "--log-driver {value}",
            "help": "Logging driver for the container."
          },
          {
            "name": "LogOpt",
            "type": "List<string>",
            "format": "--log-opt {value}",
            "help": "Log driver options."
          },
          {
            "name": "MacAddress",
            "type": "string",
            "format": "--mac-address {value}",
            "help": "Container MAC address (e.g., 92:d0:c6:0a:29:33)."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "MemorySwappiness",
            "type": "long?",
            "format": "--memory-swappiness {value}",
            "help": "Tune container memory swappiness (0 to 100)."
          },
          {
            "name": "Mount",
            "type": "string",
            "format": "--mount {value}",
            "help": "Attach a filesystem mount to the container."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "--name {value}",
            "help": "Assign a name to the container."
          },
          {
            "name": "Net",
            "type": "string",
            "format": "--net {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetAlias",
            "type": "List<string>",
            "format": "--net-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Connect a container to a network."
          },
          {
            "name": "NetworkAlias",
            "type": "List<string>",
            "format": "--network-alias {value}",
            "help": "Add network-scoped alias for the container."
          },
          {
            "name": "NoHealthcheck",
            "type": "bool",
            "format": "--no-healthcheck",
            "help": "Disable any container-specified HEALTHCHECK."
          },
          {
            "name": "OomKillDisable",
            "type": "bool",
            "format": "--oom-kill-disable",
            "help": "Disable OOM Killer."
          },
          {
            "name": "OomScoreAdj",
            "type": "int",
            "format": "--oom-score-adj {value}",
            "help": "Tune host's OOM preferences (-1000 to 1000)."
          },
          {
            "name": "Pid",
            "type": "string",
            "format": "--pid {value}",
            "help": "PID namespace to use."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to this container."
          },
          {
            "name": "Publish",
            "type": "List<string>",
            "format": "--publish {value}",
            "help": "Publish a container's port(s) to the host."
          },
          {
            "name": "PublishAll",
            "type": "bool",
            "format": "--publish-all",
            "help": "Publish all exposed ports to random ports."
          },
          {
            "name": "ReadOnly",
            "type": "bool",
            "format": "--read-only",
            "help": "Mount the container's root filesystem as read only."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Automatically remove the container when it exits."
          },
          {
            "name": "Runtime",
            "type": "string",
            "format": "--runtime {value}",
            "help": "Runtime to use for this container."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security Options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "SigProxy",
            "type": "bool",
            "format": "--sig-proxy",
            "help": "Proxy received signals to the process."
          },
          {
            "name": "StopSignal",
            "type": "string",
            "format": "--stop-signal {value}",
            "help": "Signal to stop a container."
          },
          {
            "name": "StopTimeout",
            "type": "int",
            "format": "--stop-timeout {value}",
            "help": "Timeout (in seconds) to stop a container."
          },
          {
            "name": "StorageOpt",
            "type": "List<string>",
            "format": "--storage-opt {value}",
            "help": "Storage driver options for the container."
          },
          {
            "name": "Sysctl",
            "type": "Dictionary<string,string>",
            "format": "--sysctl {value}",
            "itemFormat": "{key}:{value}",
            "help": "Sysctl options."
          },
          {
            "name": "Tmpfs",
            "type": "List<string>",
            "format": "--tmpfs {value}",
            "help": "Mount a tmpfs directory."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Userns",
            "type": "string",
            "format": "--userns {value}",
            "help": "User namespace to use."
          },
          {
            "name": "Uts",
            "type": "string",
            "format": "--uts {value}",
            "help": "UTS namespace to use."
          },
          {
            "name": "Volume",
            "type": "List<string>",
            "format": "--volume {value}",
            "help": "Bind mount a volume."
          },
          {
            "name": "VolumeDriver",
            "type": "string",
            "format": "--volume-driver {value}",
            "help": "Optional volume driver for the container."
          },
          {
            "name": "VolumesFrom",
            "type": "List<string>",
            "format": "--volumes-from {value}",
            "help": "Mount volumes from the specified container(s)."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "[COMMAND]"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more nodes.",
      "postfix": "NodeInspect",
      "definiteArgument": "node inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Pretty",
            "type": "bool",
            "format": "--pretty",
            "help": "Print the information in a human friendly format."
          },
          {
            "name": "Selves",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "self|NODE"
          }
        ]
      }
    },
    {
      "help": "Save one or more images to a tar archive (streamed to STDOUT by default).",
      "postfix": "Save",
      "definiteArgument": "save",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Write to a file, instead of STDOUT."
          },
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Display a live stream of container(s) resource usage statistics.",
      "postfix": "ContainerStats",
      "definiteArgument": "container stats",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all containers (default shows just running)."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "NoStream",
            "type": "bool",
            "format": "--no-stream",
            "help": "Disable streaming stats and only pull the first result."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[CONTAINER...]"
          }
        ]
      }
    },
    {
      "help": "Run a command in a running container.",
      "postfix": "ContainerExec",
      "definiteArgument": "container exec",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Detached mode: run command in the background."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to the command."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "COMMAND"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "List nodes in the swarm.",
      "postfix": "NodeLs",
      "definiteArgument": "node ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print nodes using a Go template."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display IDs."
          }
        ]
      }
    },
    {
      "help": "Join a swarm as a node and/or manager.",
      "postfix": "SwarmJoin",
      "definiteArgument": "swarm join HOST:PORT",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AdvertiseAddr",
            "type": "string",
            "format": "--advertise-addr {value}",
            "help": "Advertised address (format: &lt;ip|interface&gt;[:port])."
          },
          {
            "name": "Availability",
            "type": "Availability",
            "format": "--availability {value}",
            "help": "Availability of the node (\"active\"|\"pause\"|\"drain\")."
          },
          {
            "name": "DataPathAddr",
            "type": "string",
            "format": "--data-path-addr {value}",
            "help": "Address or interface to use for data path traffic (format: &lt;ip|interface&gt;)."
          },
          {
            "name": "ListenAddr",
            "type": "string",
            "format": "--listen-addr {value}",
            "help": "Listen address (format: &lt;ip|interface&gt;[:port])."
          },
          {
            "name": "Token",
            "type": "string",
            "format": "--token {value}",
            "help": "Token for entry into the swarm."
          }
        ]
      }
    },
    {
      "help": "Fetch the logs of a container.",
      "postfix": "ContainerLogs",
      "definiteArgument": "container logs",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Details",
            "type": "bool",
            "format": "--details",
            "help": "Show extra details provided to logs."
          },
          {
            "name": "Follow",
            "type": "bool",
            "format": "--follow",
            "help": "Follow log output."
          },
          {
            "name": "Since",
            "type": "string",
            "format": "--since {value}",
            "help": "Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)."
          },
          {
            "name": "Tail",
            "type": "string",
            "format": "--tail {value}",
            "help": "Number of lines to show from the end of the logs."
          },
          {
            "name": "Timestamps",
            "type": "bool",
            "format": "--timestamps",
            "help": "Show timestamps."
          },
          {
            "name": "Until",
            "type": "string",
            "format": "--until {value}",
            "help": "Show logs before a timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "List checkpoints for a container.",
      "postfix": "CheckpointLs",
      "definiteArgument": "checkpoint ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "CheckpointDir",
            "type": "string",
            "format": "--checkpoint-dir {value}",
            "help": "Use a custom checkpoint storage directory."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Kill one or more running containers.",
      "postfix": "ContainerKill",
      "definiteArgument": "container kill",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Signal",
            "type": "string",
            "format": "--signal {value}",
            "help": "Signal to send to the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Install a plugin.",
      "postfix": "PluginInstall",
      "definiteArgument": "plugin install",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Alias",
            "type": "string",
            "format": "--alias {value}",
            "help": "Local name for plugin."
          },
          {
            "name": "Disable",
            "type": "bool",
            "format": "--disable",
            "help": "Do not enable the plugin on install."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "GrantAllPermissions",
            "type": "bool",
            "format": "--grant-all-permissions",
            "help": "Grant all permissions necessary to run the plugin."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          },
          {
            "name": "KeyValues",
            "type": "Dictionary<string,string>",
            "format": "{value}",
            "itemFormat": "{key=value}",
            "help": "[KEY=VALUE...]"
          }
        ]
      }
    },
    {
      "help": "Remove unused images.",
      "postfix": "ImagePrune",
      "definiteArgument": "image prune",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Remove all unused images, not just dangling ones."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Provide filter values (e.g. 'until=&lt;timestamp&gt;')."
          },
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation."
          }
        ]
      }
    },
    {
      "help": "Import the contents from a tarball to create a filesystem image.",
      "postfix": "ImageImport",
      "definiteArgument": "image import",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Change",
            "type": "List<string>",
            "format": "--change {value}",
            "help": "Apply Dockerfile instruction to the created image."
          },
          {
            "name": "Message",
            "type": "string",
            "format": "--message {value}",
            "help": "Set commit message for imported image."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "file|URL|-"
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "Inspect changes to files or directories on a container's filesystem.",
      "postfix": "Diff",
      "definiteArgument": "diff",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Unpause all processes within one or more containers.",
      "postfix": "Unpause",
      "definiteArgument": "unpause",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "List containers.",
      "postfix": "ContainerLs",
      "definiteArgument": "container ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all containers (default shows just running)."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print containers using a Go template."
          },
          {
            "name": "Last",
            "type": "int",
            "format": "--last {value}",
            "help": "Show n last created containers (includes all states)."
          },
          {
            "name": "Latest",
            "type": "bool",
            "format": "--latest",
            "help": "Show the latest created container (includes all states)."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display numeric IDs."
          },
          {
            "name": "Size",
            "type": "bool",
            "format": "--size",
            "help": "Display total file sizes."
          }
        ]
      }
    },
    {
      "help": "List tasks running on one or more nodes, defaults to current node.",
      "postfix": "NodePs",
      "definiteArgument": "node ps",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print tasks using a Go template."
          },
          {
            "name": "NoResolve",
            "type": "bool",
            "format": "--no-resolve",
            "help": "Do not map IDs to Names."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display task IDs."
          },
          {
            "name": "Nodes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[NODE...]"
          }
        ]
      }
    },
    {
      "help": "Display the running processes of a container.",
      "postfix": "ContainerTop",
      "definiteArgument": "container top [ps",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Options",
            "type": "string",
            "format": "{value}",
            "help": "OPTIONS]"
          }
        ]
      }
    },
    {
      "help": "Rename a container.",
      "postfix": "ContainerRename",
      "definiteArgument": "container rename",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "NewName",
            "type": "string",
            "format": "{value}",
            "help": "NEW_NAME"
          }
        ]
      }
    },
    {
      "help": "Show the history of an image.",
      "postfix": "ImageHistory",
      "definiteArgument": "image history",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "Human",
            "type": "bool",
            "format": "--human",
            "help": "Print sizes and dates in human readable format."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only show numeric IDs."
          },
          {
            "name": "Image",
            "type": "string",
            "format": "{value}",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "List containers.",
      "postfix": "Ps",
      "definiteArgument": "ps",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all containers (default shows just running)."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print containers using a Go template."
          },
          {
            "name": "Last",
            "type": "int",
            "format": "--last {value}",
            "help": "Show n last created containers (includes all states)."
          },
          {
            "name": "Latest",
            "type": "bool",
            "format": "--latest",
            "help": "Show the latest created container (includes all states)."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only display numeric IDs."
          },
          {
            "name": "Size",
            "type": "bool",
            "format": "--size",
            "help": "Display total file sizes."
          }
        ]
      }
    },
    {
      "help": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE.",
      "postfix": "ImageTag",
      "definiteArgument": "image tag",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "SourceImage",
            "type": "string",
            "format": "{value}",
            "help": "SOURCE_IMAGE[:TAG]"
          },
          {
            "name": "TargetImage",
            "type": "string",
            "format": "{value}",
            "help": "TARGET_IMAGE[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Export a container's filesystem as a tar archive.",
      "postfix": "Export",
      "definiteArgument": "export",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Write to a file, instead of STDOUT."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Disconnect a container from a network.",
      "postfix": "NetworkDisconnect",
      "definiteArgument": "network disconnect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the container to disconnect from a network."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "{value}",
            "help": "NETWORK"
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Build an image from a Dockerfile.",
      "postfix": "BuilderBuild",
      "definiteArgument": "builder build",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "BuildArg",
            "type": "List<string>",
            "format": "--build-arg {value}",
            "help": "Set build-time variables."
          },
          {
            "name": "CacheFrom",
            "type": "List<string>",
            "format": "--cache-from {value}",
            "help": "Images to consider as cache sources."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Compress",
            "type": "bool",
            "format": "--compress",
            "help": "Compress the build context using gzip."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Name of the Dockerfile (Default is 'PATH/Dockerfile')."
          },
          {
            "name": "ForceRm",
            "type": "bool",
            "format": "--force-rm",
            "help": "Always remove intermediate containers."
          },
          {
            "name": "Iidfile",
            "type": "string",
            "format": "--iidfile {value}",
            "help": "Write the image ID to the file."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set metadata for an image."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Set the networking mode for the RUN instructions during build."
          },
          {
            "name": "NoCache",
            "type": "bool",
            "format": "--no-cache",
            "help": "Do not use cache when building the image."
          },
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Output destination (format: type=local,dest=path)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Progress",
            "type": "string",
            "format": "--progress {value}",
            "help": "Set type of progress output (auto, plain, tty). Use plain to show container output."
          },
          {
            "name": "Pull",
            "type": "bool",
            "format": "--pull",
            "help": "Always attempt to pull a newer version of the image."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress the build output and print image ID on success."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Remove intermediate containers after a successful build."
          },
          {
            "name": "Secret",
            "type": "string",
            "format": "--secret {value}",
            "help": "Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "Squash",
            "type": "bool",
            "format": "--squash",
            "help": "Squash newly built layers into a single new layer."
          },
          {
            "name": "Ssh",
            "type": "string",
            "format": "--ssh {value}",
            "help": "SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|&lt;id&gt;[=&lt;socket&gt;|&lt;key&gt;[,&lt;key&gt;]])."
          },
          {
            "name": "Stream",
            "type": "bool",
            "format": "--stream",
            "help": "Stream attaches to server to negotiate build context."
          },
          {
            "name": "Tag",
            "type": "List<string>",
            "format": "--tag {value}",
            "help": "Name and optionally a tag in the 'name:tag' format."
          },
          {
            "name": "Target",
            "type": "string",
            "format": "--target {value}",
            "help": "Set the target build stage to build."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "Path",
            "type": "string",
            "format": "{value}",
            "help": "Path or url where the build context is located."
          }
        ]
      }
    },
    {
      "help": "Display a live stream of container(s) resource usage statistics.",
      "postfix": "Stats",
      "definiteArgument": "stats",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all containers (default shows just running)."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "NoStream",
            "type": "bool",
            "format": "--no-stream",
            "help": "Disable streaming stats and only pull the first result."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Do not truncate output."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[CONTAINER...]"
          }
        ]
      }
    },
    {
      "help": "Search the Docker Hub for images.",
      "postfix": "Search",
      "definiteArgument": "search",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Automated",
            "type": "bool",
            "format": "--automated",
            "help": "Only show automated builds."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print search using a Go template."
          },
          {
            "name": "Limit",
            "type": "int",
            "format": "--limit {value}",
            "help": "Max number of search results."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Stars",
            "type": "int",
            "format": "--stars {value}",
            "help": "Only displays with at least x stars."
          },
          {
            "name": "Term",
            "type": "string",
            "format": "{value}",
            "help": "TERM"
          }
        ]
      }
    },
    {
      "help": "Manage Docker image manifests and manifest lists.",
      "postfix": "Manifest",
      "definiteArgument": "manifest",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "COMMAND"
          }
        ]
      }
    },
    {
      "help": "Push a plugin to a registry.",
      "postfix": "PluginPush",
      "definiteArgument": "plugin push",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image signing."
          },
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN[:TAG]"
          }
        ]
      }
    },
    {
      "help": "Load an image from a tar archive or STDIN.",
      "postfix": "ImageLoad",
      "definiteArgument": "image load",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Input",
            "type": "string",
            "format": "--input {value}",
            "help": "Read from tar archive file, instead of STDIN."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress the load output."
          }
        ]
      }
    },
    {
      "help": "Manage Swarm.",
      "postfix": "Swarm",
      "definiteArgument": "swarm",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Remove one or more containers.",
      "postfix": "ContainerRm",
      "definiteArgument": "container rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force the removal of a running container (uses SIGKILL)."
          },
          {
            "name": "Link",
            "type": "bool",
            "format": "--link",
            "help": "Remove the specified link."
          },
          {
            "name": "Volumes",
            "type": "bool",
            "format": "--volumes",
            "help": "Remove the volumes associated with the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Update configuration of one or more containers.",
      "postfix": "ContainerUpdate",
      "definiteArgument": "container update",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "BlkioWeight",
            "type": "int",
            "format": "--blkio-weight {value}",
            "help": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuRtPeriod",
            "type": "long?",
            "format": "--cpu-rt-period {value}",
            "help": "Limit the CPU real-time period in microseconds."
          },
          {
            "name": "CpuRtRuntime",
            "type": "long?",
            "format": "--cpu-rt-runtime {value}",
            "help": "Limit the CPU real-time runtime in microseconds."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "Cpus",
            "type": "decimal?",
            "format": "--cpus {value}",
            "help": "Number of CPUs."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "KernelMemory",
            "type": "long?",
            "format": "--kernel-memory {value}",
            "help": "Kernel memory limit."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemoryReservation",
            "type": "long?",
            "format": "--memory-reservation {value}",
            "help": "Memory soft limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "PidsLimit",
            "type": "long?",
            "format": "--pids-limit {value}",
            "help": "Tune container pids limit (set -1 for unlimited)."
          },
          {
            "name": "Restart",
            "type": "string",
            "format": "--restart {value}",
            "help": "Restart policy to apply when a container exits."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Change settings for a plugin.",
      "postfix": "PluginSet",
      "definiteArgument": "plugin set",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Plugin",
            "type": "string",
            "format": "{value}",
            "help": "PLUGIN"
          },
          {
            "name": "KeyValues",
            "type": "Dictionary<string,string>",
            "format": "{value}",
            "itemFormat": "{key=value}",
            "help": "KEY=VALUE"
          }
        ]
      }
    },
    {
      "help": "Block until one or more containers stop, then print their exit codes.",
      "postfix": "Wait",
      "definiteArgument": "wait",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Export a context to a tar or kubeconfig file.",
      "postfix": "ContextExport",
      "definiteArgument": "context export",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Kubeconfig",
            "type": "bool",
            "format": "--kubeconfig",
            "help": "Export as a kubeconfig file."
          },
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "CONTEXT"
          },
          {
            "name": "File",
            "type": "string",
            "format": "{value}",
            "help": "[FILE|-]"
          }
        ]
      }
    },
    {
      "help": "Add additional information to a local image manifest.",
      "postfix": "ManifestAnnotate",
      "definiteArgument": "manifest annotate",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Arch",
            "type": "string",
            "format": "--arch {value}",
            "help": "Set architecture."
          },
          {
            "name": "Os",
            "type": "string",
            "format": "--os {value}",
            "help": "Set operating system."
          },
          {
            "name": "OsFeatures",
            "type": "List<string>",
            "format": "--os-features {value}",
            "help": "Set operating system feature."
          },
          {
            "name": "Variant",
            "type": "string",
            "format": "--variant {value}",
            "help": "Set architecture variant."
          },
          {
            "name": "ManifestList",
            "type": "string",
            "format": "{value}",
            "help": "MANIFEST_LIST"
          },
          {
            "name": "Manifest",
            "type": "string",
            "format": "{value}",
            "help": "MANIFEST"
          }
        ]
      }
    },
    {
      "help": "Pull an image or a repository from a registry.",
      "postfix": "ImagePull",
      "definiteArgument": "image pull",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AllTags",
            "type": "bool",
            "format": "--all-tags",
            "help": "Download all tagged images in the repository."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress verbose output."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME[:TAG|@DIGEST]"
          }
        ]
      }
    },
    {
      "help": "Get real time events from the server.",
      "postfix": "Events",
      "definiteArgument": "events",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Since",
            "type": "string",
            "format": "--since {value}",
            "help": "Show all events created since timestamp."
          },
          {
            "name": "Until",
            "type": "string",
            "format": "--until {value}",
            "help": "Stream events until this timestamp."
          }
        ]
      }
    },
    {
      "help": "List stacks.",
      "postfix": "StackLs",
      "definiteArgument": "stack ls",
      "settingsClass": {
        "baseClass": "DockerStackSettings",
        "properties": [
          {
            "name": "AllNamespaces",
            "type": "bool",
            "format": "--all-namespaces",
            "help": "List stacks from all Kubernetes namespaces."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print stacks using a Go template."
          },
          {
            "name": "Namespace",
            "type": "List<string>",
            "format": "--namespace {value}",
            "help": "Kubernetes namespaces to use."
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more containers.",
      "postfix": "ContainerInspect",
      "definiteArgument": "container inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Size",
            "type": "bool",
            "format": "--size",
            "help": "Display total file sizes."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Kill one or more running containers.",
      "postfix": "Kill",
      "definiteArgument": "kill",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Signal",
            "type": "string",
            "format": "--signal {value}",
            "help": "Signal to send to the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Create a checkpoint from a running container.",
      "postfix": "CheckpointCreate",
      "definiteArgument": "checkpoint create",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "CheckpointDir",
            "type": "string",
            "format": "--checkpoint-dir {value}",
            "help": "Use a custom checkpoint storage directory."
          },
          {
            "name": "LeaveRunning",
            "type": "bool",
            "format": "--leave-running",
            "help": "Leave the container running after checkpoint."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Checkpoint",
            "type": "string",
            "format": "{value}",
            "help": "CHECKPOINT"
          }
        ]
      }
    },
    {
      "help": "Pause all processes within one or more containers.",
      "postfix": "Pause",
      "definiteArgument": "pause",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Fetch the logs of a container.",
      "postfix": "Logs",
      "definiteArgument": "logs",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Details",
            "type": "bool",
            "format": "--details",
            "help": "Show extra details provided to logs."
          },
          {
            "name": "Follow",
            "type": "bool",
            "format": "--follow",
            "help": "Follow log output."
          },
          {
            "name": "Since",
            "type": "string",
            "format": "--since {value}",
            "help": "Show logs since timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)."
          },
          {
            "name": "Tail",
            "type": "string",
            "format": "--tail {value}",
            "help": "Number of lines to show from the end of the logs."
          },
          {
            "name": "Timestamps",
            "type": "bool",
            "format": "--timestamps",
            "help": "Show timestamps."
          },
          {
            "name": "Until",
            "type": "string",
            "format": "--until {value}",
            "help": "Show logs before a timestamp (e.g. 2013-01-02T13:23:37) or relative (e.g. 42m for 42 minutes)."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more contexts.",
      "postfix": "ContextInspect",
      "definiteArgument": "context inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Context",
            "type": "string",
            "format": "{value}",
            "help": "[CONTEXT]"
          },
          {
            "name": "Contexts",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[CONTEXT...]"
          }
        ]
      }
    },
    {
      "help": "Promote one or more nodes to manager in the swarm.",
      "postfix": "NodePromote",
      "definiteArgument": "node promote",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Nodes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NODE"
          }
        ]
      }
    },
    {
      "help": "Demote one or more nodes from manager in the swarm.",
      "postfix": "NodeDemote",
      "definiteArgument": "node demote",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Nodes",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "NODE"
          }
        ]
      }
    },
    {
      "help": "Run a command in a running container.",
      "postfix": "Exec",
      "definiteArgument": "exec",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Detached mode: run command in the background."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Env",
            "type": "List<string>",
            "format": "--env {value}",
            "help": "Set environment variables."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Keep STDIN open even if not attached."
          },
          {
            "name": "Privileged",
            "type": "bool",
            "format": "--privileged",
            "help": "Give extended privileges to the command."
          },
          {
            "name": "Tty",
            "type": "bool",
            "format": "--tty",
            "help": "Allocate a pseudo-TTY."
          },
          {
            "name": "User",
            "type": "string",
            "format": "--user {value}",
            "help": "Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])."
          },
          {
            "name": "Workdir",
            "type": "string",
            "format": "--workdir {value}",
            "help": "Working directory inside the container."
          },
          {
            "name": "Container",
            "type": "string",
            "format": "{value}",
            "help": "CONTAINER"
          },
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "COMMAND"
          },
          {
            "name": "Args",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "[ARG...]"
          }
        ]
      }
    },
    {
      "help": "Remove one or more images.",
      "postfix": "ImageRm",
      "definiteArgument": "image rm",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Force removal of the image."
          },
          {
            "name": "NoPrune",
            "type": "bool",
            "format": "--no-prune",
            "help": "Do not delete untagged parents."
          },
          {
            "name": "Images",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "IMAGE"
          }
        ]
      }
    },
    {
      "help": "Manage images.",
      "postfix": "Image",
      "definiteArgument": "image",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage contexts.",
      "postfix": "Context",
      "definiteArgument": "context",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "Manage volumes.",
      "postfix": "Volume",
      "definiteArgument": "volume",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Command",
            "type": "string",
            "format": "{value}",
            "help": "COMMAND"
          }
        ]
      }
    },
    {
      "help": "Start one or more stopped containers.",
      "postfix": "ContainerStart",
      "definiteArgument": "container start",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Attach",
            "type": "bool",
            "format": "--attach",
            "help": "Attach STDOUT/STDERR and forward signals."
          },
          {
            "name": "Checkpoint",
            "type": "string",
            "format": "--checkpoint {value}",
            "help": "Restore from this checkpoint."
          },
          {
            "name": "CheckpointDir",
            "type": "string",
            "format": "--checkpoint-dir {value}",
            "help": "Use a custom checkpoint storage directory."
          },
          {
            "name": "DetachKeys",
            "type": "string",
            "format": "--detach-keys {value}",
            "help": "Override the key sequence for detaching a container."
          },
          {
            "name": "Interactive",
            "type": "bool",
            "format": "--interactive",
            "help": "Attach container's STDIN."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Display detailed information on one or more plugins.",
      "postfix": "PluginInspect",
      "definiteArgument": "plugin inspect",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Format the output using the given Go template."
          },
          {
            "name": "Plugins",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "PLUGIN"
          }
        ]
      }
    },
    {
      "help": "Log out from a Docker registry.",
      "postfix": "Logout",
      "definiteArgument": "logout",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Server",
            "type": "string",
            "format": "{value}",
            "help": "[SERVER]"
          }
        ]
      }
    },
    {
      "help": "Manage networks.",
      "postfix": "Network",
      "definiteArgument": "network",
      "settingsClass": {
        "baseClass": "DockerSettings"
      }
    },
    {
      "help": "List images.",
      "postfix": "ImageLs",
      "definiteArgument": "image ls",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "All",
            "type": "bool",
            "format": "--all",
            "help": "Show all images (default hides intermediate images)."
          },
          {
            "name": "Digests",
            "type": "bool",
            "format": "--digests",
            "help": "Show digests."
          },
          {
            "name": "Filter",
            "type": "string",
            "format": "--filter {value}",
            "help": "Filter output based on conditions provided."
          },
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "NoTrunc",
            "type": "bool",
            "format": "--no-trunc",
            "help": "Don't truncate output."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Only show numeric IDs."
          },
          {
            "name": "Repository",
            "type": "string",
            "format": "{value}",
            "help": "[REPOSITORY[:TAG]]"
          }
        ]
      }
    },
    {
      "help": "Show docker disk usage.",
      "postfix": "SystemDf",
      "definiteArgument": "system df",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Format",
            "type": "string",
            "format": "--format {value}",
            "help": "Pretty-print images using a Go template."
          },
          {
            "name": "Verbose",
            "type": "bool",
            "format": "--verbose",
            "help": "Show detailed information on space usage."
          }
        ]
      }
    },
    {
      "help": "Revert changes to a service's configuration.",
      "postfix": "ServiceRollback",
      "definiteArgument": "service rollback",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Detach",
            "type": "bool",
            "format": "--detach",
            "help": "Exit immediately instead of waiting for the service to converge."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress progress output."
          },
          {
            "name": "Service",
            "type": "string",
            "format": "{value}",
            "help": "SERVICE"
          }
        ]
      }
    },
    {
      "help": "Restart one or more containers.",
      "postfix": "Restart",
      "definiteArgument": "restart",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Time",
            "type": "int",
            "format": "--time {value}",
            "help": "Seconds to wait for stop before killing the container."
          },
          {
            "name": "Containers",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "CONTAINER"
          }
        ]
      }
    },
    {
      "help": "Remove a signer.",
      "postfix": "TrustSignerRemove",
      "definiteArgument": "trust signer remove",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "Force",
            "type": "bool",
            "format": "--force",
            "help": "Do not prompt for confirmation before removing the most recent signer."
          },
          {
            "name": "Name",
            "type": "string",
            "format": "{value}",
            "help": "NAME"
          },
          {
            "name": "Repositories",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "REPOSITORY"
          }
        ]
      }
    },
    {
      "help": "Remove one or more stacks.",
      "postfix": "StackRm",
      "definiteArgument": "stack rm",
      "settingsClass": {
        "baseClass": "DockerStackSettings",
        "properties": [
          {
            "name": "Namespace",
            "type": "string",
            "format": "--namespace {value}",
            "help": "Kubernetes namespace to use."
          },
          {
            "name": "Stacks",
            "type": "List<string>",
            "format": "{value}",
            "separator": " ",
            "help": "STACK"
          }
        ]
      }
    },
    {
      "help": "Build an image from a Dockerfile.",
      "postfix": "Build",
      "definiteArgument": "build",
      "settingsClass": {
        "baseClass": "DockerSettings",
        "properties": [
          {
            "name": "AddHost",
            "type": "List<string>",
            "format": "--add-host {value}",
            "help": "Add a custom host-to-IP mapping (host:ip)."
          },
          {
            "name": "BuildArg",
            "type": "List<string>",
            "format": "--build-arg {value}",
            "help": "Set build-time variables."
          },
          {
            "name": "CacheFrom",
            "type": "List<string>",
            "format": "--cache-from {value}",
            "help": "Images to consider as cache sources."
          },
          {
            "name": "CgroupParent",
            "type": "string",
            "format": "--cgroup-parent {value}",
            "help": "Optional parent cgroup for the container."
          },
          {
            "name": "Compress",
            "type": "bool",
            "format": "--compress",
            "help": "Compress the build context using gzip."
          },
          {
            "name": "CpuPeriod",
            "type": "long?",
            "format": "--cpu-period {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) period."
          },
          {
            "name": "CpuQuota",
            "type": "long?",
            "format": "--cpu-quota {value}",
            "help": "Limit the CPU CFS (Completely Fair Scheduler) quota."
          },
          {
            "name": "CpuShares",
            "type": "long?",
            "format": "--cpu-shares {value}",
            "help": "CPU shares (relative weight)."
          },
          {
            "name": "CpusetCpus",
            "type": "string",
            "format": "--cpuset-cpus {value}",
            "help": "CPUs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "CpusetMems",
            "type": "string",
            "format": "--cpuset-mems {value}",
            "help": "MEMs in which to allow execution (0-3, 0,1)."
          },
          {
            "name": "DisableContentTrust",
            "type": "bool",
            "format": "--disable-content-trust",
            "help": "Skip image verification."
          },
          {
            "name": "File",
            "type": "string",
            "format": "--file {value}",
            "help": "Name of the Dockerfile (Default is 'PATH/Dockerfile')."
          },
          {
            "name": "ForceRm",
            "type": "bool",
            "format": "--force-rm",
            "help": "Always remove intermediate containers."
          },
          {
            "name": "Iidfile",
            "type": "string",
            "format": "--iidfile {value}",
            "help": "Write the image ID to the file."
          },
          {
            "name": "Isolation",
            "type": "string",
            "format": "--isolation {value}",
            "help": "Container isolation technology."
          },
          {
            "name": "Label",
            "type": "List<string>",
            "format": "--label {value}",
            "help": "Set metadata for an image."
          },
          {
            "name": "Memory",
            "type": "long?",
            "format": "--memory {value}",
            "help": "Memory limit."
          },
          {
            "name": "MemorySwap",
            "type": "long?",
            "format": "--memory-swap {value}",
            "help": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap."
          },
          {
            "name": "Network",
            "type": "string",
            "format": "--network {value}",
            "help": "Set the networking mode for the RUN instructions during build."
          },
          {
            "name": "NoCache",
            "type": "bool",
            "format": "--no-cache",
            "help": "Do not use cache when building the image."
          },
          {
            "name": "Output",
            "type": "string",
            "format": "--output {value}",
            "help": "Output destination (format: type=local,dest=path)."
          },
          {
            "name": "Platform",
            "type": "string",
            "format": "--platform {value}",
            "help": "Set platform if server is multi-platform capable."
          },
          {
            "name": "Progress",
            "type": "string",
            "format": "--progress {value}",
            "help": "Set type of progress output (auto, plain, tty). Use plain to show container output."
          },
          {
            "name": "Pull",
            "type": "bool",
            "format": "--pull",
            "help": "Always attempt to pull a newer version of the image."
          },
          {
            "name": "Quiet",
            "type": "bool",
            "format": "--quiet",
            "help": "Suppress the build output and print image ID on success."
          },
          {
            "name": "Rm",
            "type": "bool",
            "format": "--rm",
            "help": "Remove intermediate containers after a successful build."
          },
          {
            "name": "Secret",
            "type": "string",
            "format": "--secret {value}",
            "help": "Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret."
          },
          {
            "name": "SecurityOpt",
            "type": "List<string>",
            "format": "--security-opt {value}",
            "help": "Security options."
          },
          {
            "name": "ShmSize",
            "type": "long?",
            "format": "--shm-size {value}",
            "help": "Size of /dev/shm."
          },
          {
            "name": "Squash",
            "type": "bool",
            "format": "--squash",
            "help": "Squash newly built layers into a single new layer."
          },
          {
            "name": "Ssh",
            "type": "string",
            "format": "--ssh {value}",
            "help": "SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|&lt;id&gt;[=&lt;socket&gt;|&lt;key&gt;[,&lt;key&gt;]])."
          },
          {
            "name": "Stream",
            "type": "bool",
            "format": "--stream",
            "help": "Stream attaches to server to negotiate build context."
          },
          {
            "name": "Tag",
            "type": "List<string>",
            "format": "--tag {value}",
            "help": "Name and optionally a tag in the 'name:tag' format."
          },
          {
            "name": "Target",
            "type": "string",
            "format": "--target {value}",
            "help": "Set the target build stage to build."
          },
          {
            "name": "Ulimit",
            "type": "string",
            "format": "--ulimit {value}",
            "help": "Ulimit options."
          },
          {
            "name": "Path",
            "type": "string",
            "format": "{value}",
            "help": "Path or url where the build context is located."
          }
        ]
      }
    }
  ],
  "commonTaskProperties": [
    {
      "name": "CliSettings",
      "type": "CliSettings",
      "format": "{value}",
      "customImpl": true,
      "customValue": true
    }
  ],
  "dataClasses": [
    {
      "name": "CliSettings",
      "properties": [
        {
          "name": "LogLevel",
          "type": "LogLevel",
          "format": "--log-level {value}",
          "help": "Set the logging level."
        },
        {
          "name": "Config",
          "type": "string",
          "format": "--config {value}",
          "help": "Location of client config files (default ~/.docker)."
        },
        {
          "name": "Debug",
          "type": "bool",
          "format": "--debug",
          "help": "Enable debug mode."
        },
        {
          "name": "TLS",
          "type": "bool",
          "format": "--tls",
          "help": "Use TLS; implied by --tlsverify."
        },
        {
          "name": "TLSVerify",
          "type": "bool",
          "format": "--tlsverify",
          "help": "Use TLS and verify the remote."
        },
        {
          "name": "TLSCaCert",
          "type": "string",
          "format": "--tlscacert {value}",
          "help": "Trust certs signed only by this CA (default ~/.docker/ca.pem)."
        },
        {
          "name": "TLSCert",
          "type": "string",
          "format": "--tlscert {value}",
          "help": "Path to TLS certificate file (default ~/.docker/cert.pem)."
        },
        {
          "name": "TLSKey",
          "type": "string",
          "format": "--tlskey {value}",
          "help": "Path to TLS key file (default ~/.docker/key.pem)."
        }
      ]
    }
  ],
  "enumerations": [
    {
      "name": "LogLevel",
      "values": [
        "debug",
        "info",
        "warn",
        "error",
        "fatal"
      ]
    },
    {
      "name": "RestartCondition",
      "values": [
        "none",
        "on-failure",
        "any"
      ]
    },
    {
      "name": "RollbackFailureAction",
      "values": [
        "pause",
        "continue"
      ]
    },
    {
      "name": "RollbackOrder",
      "values": [
        "start-first",
        "stop-first"
      ]
    },
    {
      "name": "UpdateFailureAction",
      "values": [
        "pause",
        "continue",
        "rollback"
      ]
    },
    {
      "name": "UpdateOrder",
      "values": [
        "start-first",
        "stop-first"
      ]
    },
    {
      "name": "Availability",
      "values": [
        "active",
        "pause",
        "drain"
      ]
    },
    {
      "name": "Role",
      "values": [
        "worker",
        "manager"
      ]
    },
    {
      "name": "ResolveImage",
      "values": [
        "always",
        "changed",
        "never"
      ]
    }
  ]
}