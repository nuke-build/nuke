{
  "$schema": "https://raw.githubusercontent.com/nuke-build/nuke/master/source/Nuke.CodeGeneration/schema.json",
  "license": [
    "Copyright 2018 Maintainers and Contributors of NUKE.",
    "Distributed under the MIT License.",
    "https://github.com/nuke-build/tools/blob/master/LICENSE"
  ],
  "references": [
    "https://specflow.org/plus/documentation/SpecFlowPlus-Runner-Command-Line/",
    "https://specflow.org/documentation/Reporting/"
  ],
  "name": "SpecFlow",
  "officialUrl": "https://specflow.org/",
  "help": "Use SpecFlow to define, manage and automatically execute human-readable acceptance tests in .NET projects. Writing easily understandable tests is a cornerstone of the BDD paradigm and also helps build up a living documentation of your system.",
  "packageId": "SpecFlow",
  "packageExecutable": "specflow.exe",
  "tasks": [
    {
      "help": "This report provides a formatted HTML report of a test execution. The report contains a summary about the executed tests and the result and also a detailed report for the individual scenario executions.",
      "postfix": "NUnitExecutionReport",
      "definiteArgument": "nunitexecutionreport",
      "settingsClass": {
        "properties": [
          {
            "name": "ProjectFile",
            "type": "string",
            "assertion": "File",
            "format": "--ProjectFile {value}",
            "help": "A path of the project file containing the *.feature files. Required."
          },
          {
            "name": "XmlTestResult",
            "type": "string",
            "format": "--xmlTestResult {value}",
            "help": "The XML test result file generated by nunit-console. Optional. Default: TestResult.xml."
          },
          {
            "name": "TestOutput",
            "type": "string",
            "format": "--testOutput {value}",
            "help": "The labeled test output file generated by nunit-console. Optional. Default: TestResult.txt."
          },
          {
            "name": "OutputFile",
            "type": "string",
            "format": "--OutputFile {value}",
            "help": "Generated Output File. Optional. Default: TestResult.html."
          },
          {
            "name": "XsltFile",
            "type": "string",
            "format": "--XsltFile {value}",
            "help": "Custom XSLT file to use, defaults to built-in stylesheet if not provided. Optional. Default: not specified."
          },
          {
            "name": "ProjectName",
            "type": "string",
            "format": "--ProjectName {value}",
            "help": "Project name which can be passed explicitly instead of implicitly getting it from --ProjectFile. Optional. Default: not specified."
          },
          {
            "name": "FeatureLanguage",
            "type": "string",
            "format": "--FeatureLanguage {value}",
            "help": "The feature language to use. Optional. Default: en-US."
          }
        ]
      }
    },
    {
      "help": "This report provides a formatted HTML report of a test execution. The report contains a summary about the executed tests and the result and also a detailed report for the individual scenario executions.",
      "postfix": "MSTestExecutionReport",
      "commonPropertySets": [
        "report"
      ],
      "definiteArgument": "mstestexecutionreport",
      "settingsClass": {
        "properties": [
          {
            "name": "ProjectFile",
            "type": "string",
            "assertion": "File",
            "format": "{value}",
            "help": "A path of the project file containing the *.feature files. Required."
          },
          {
            "name": "TestResult",
            "type": "string",
            "format": "/testResult {value}",
            "help": "The TRX test result file generated by MsTest. Optional. Default: TestResult.trx"
          }
        ]
      }
    },
    {
      "help": "This report shows the usage and binding status of the steps for the entire project. You can use this report to find both unused code in the automation layer and scenario steps that have no definition yet.",
      "postfix": "StepDefinitionReport",
      "commonPropertySets": [
        "report"
      ],
      "definiteArgument": "stepdefinitionreport",
      "settingsClass": {
        "properties": [
          {
            "name": "ProjectFile",
            "type": "string",
            "assertion": "File",
            "format": "{value}",
            "help": "A path of the project file containing the *.feature files. Required."
          },
          {
            "name": "BinFolder",
            "type": "string",
            "format": "/testResult {value}",
            "help": "A path for the compiled SpecFlow project. Optional. Default: bin/debug"
          }
        ]
      }
    },
    {
      "help": "Use <c>SpecRun.exe run</c> to execute your tests.",
      "postfix": "Run",
      "commonPropertySets": [
        "run"
      ],
      "definiteArgument": "run",
      "settingsClass": {
        "properties": [
          {
            "name": "ToolIntegration",
            "type": "SpecFlowToolIntegration",
            "format": "/toolIntegration:{value}",
            "help": "Supported values: <c>None, VS2010, VS2012, VS2013, TeamCity, TFS</c>."
          },
          {
            "name": "Debug",
            "type": "bool",
            "format": "/debug",
            "help": "Default: false."
          }
        ]
      }
    },
    {
      "help": "Use <c>SpecRun.exe buildserverrun</c> to execute your tests in build server mode.",
      "postfix": "BuildServerRun",
      "commonPropertySets": [
        "run"
      ],
      "definiteArgument": "buildserverrun",
      "settingsClass": {
        "properties": [
          {
            "name": "Target",
            "type": "string",
            "assertion": "NotNull",
            "format": "{value}",
            "help": "The assembly or test profile (<c>.srprofile</c> file) to be tested."
          },
          {
            "name": "BuildServerName",
            "type": "string",
            "format": "/buildserver:{value}",
            "help": "The build servers' product name (TFS, TeamCity) for specialised trace output."
          }
        ]
      }
    },
    {
      "help": "Use <c>SpecRun.exe register</c> to register your SpecFlow+ license. You only need to register your license once per user per machine. The license is valid for all SpecFlow+ components.",
      "postfix": "Register",
      "definiteArgument": "register",
      "settingsClass": {
        "properties": [
          {
            "name": "LicenseKey",
            "type": "string",
            "assertion": "NotNull",
            "format": "{value}",
            "secret": true,
            "help": "The license key you received when you purchased SpecFlow+."
          },
          {
            "name": "IssuedTo",
            "type": "string",
            "assertion": "NotNull",
            "format": "{value}",
            "help": "The name of the licensee. If you purchased your SpecFlow+ license online via SWREG, this is the email address you used to purchase the license. If you purchased SpecFlow+ directly from TechTalk, this is the value in the email you received containing your license information."
          }
        ]
      }
    },
    {
      "help": "Use <c>SpecRun.exe unregister</c> to unregister your SpecFlow+ license.",
      "postfix": "Unregister",
      "definiteArgument": "register",
      "settingsClass": {}
    },
    {
      "help": "Use <c>SpecRun.exe about</c> to display information such as your version number, build date and license information (licensee, upgrade until date/expiry date).",
      "postfix": "About",
      "definiteArgument": "register",
      "settingsClass": {}
    }
  ],
  "commonTaskPropertySets": {
    "run": [
      {
        "name": "BaseFolder",
        "type": "string",
        "format": "/basefolder:{value}",
        "help": "Specifies the base folder for executing tests. All paths are relative to this path.<para>If you have specified an <b>assembly</b> as your <c>target</c> you need to define the base folder as the path to the directory containing your assembly.</para><para>If you have specified a <b>test profile</b> (.srprofile) as your target, this overrides the <c>baseFolder</c> entry in your <c>.srprofile</c> file.</para>"
      },
      {
        "name": "OutputFolder",
        "type": "string",
        "format": "/outputfolder:{value}",
        "help": "Specifies the output folder for your logs and report file. All paths are relative to this path. If you have specified a test profile (.srprofile) as your target, this value overrides the <c>outputFolder</c> entry in your <c>.srprofile</c> file.<para>If no output folder is defined in your test profile, or your <c>target</c> is an assembly,  the output folder defaults to the base folder if not specified from the command line.</para>"
      },
      {
        "name": "LogFile",
        "type": "string",
        "format": "/log:{value}",
        "help": "Specifies the target log file. This path is relative to your output folder."
      },
      {
        "name": "ReportFile",
        "type": "string",
        "format": "/report:{value}",
        "help": "Specifies the target report file. This path is relative to your output folder.<para><b>Note:</b>This option only affects the name of the report file defined in the <li>&lt;Settings&gt;</li> section of your profile. It does not affect the reports defined in the <li>&lt;Report&gt;</li>; section; to change the name of the report file for these reports, use the <c>outputName</c> attribute instead.</para>"
      },
      {
        "name": "Filter",
        "type": "string",
        "format": "/filter:{value}",
        "help": "Applies a filter to your tests and only executes those that match your expression. This overrides the <c>filter</c> entry in your <c>.srprofile</c> file. An overview of the syntax can be found <a href=\"https://specflow.org/plus/documentation/Filter/\">here</a>."
      }
    ],
    "report": [
      {
        "name": "OutputFile",
        "type": "string",
        "format": "/out {value}",
        "help": "Generated Output File. Optional. Default: TestResult.html"
      },
      {
        "name": "XsltFile",
        "type": "string",
        "format": "/xsltFile {value}",
        "help": "Custom XSLT file to use, defaults to built-in stylesheet if not provided. Optional. Default: not specified."
      }
    ]
  },
  "enumerations": [
    {
      "name": "SpecFlowToolIntegration",
      "values": [
        "None",
        "VS2010",
        "VS2012",
        "VS2013",
        "TFS"
      ]
    }
  ]
}