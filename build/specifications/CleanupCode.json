{
  "$schema": "https://raw.githubusercontent.com/nuke-build/common/master/source/Nuke.CodeGeneration/schema.json",
  "references": [
    "https://www.jetbrains.com/help/resharper/CleanupCode.html#//div[@class='chapter'][2]/ul"
  ],
  "name": "CleanupCode",
  "officialUrl": "https://www.jetbrains.com/help/resharper/CleanupCode.html",
  "help": "CleanupCode is a free command-line tool that can perform code cleanup to instantly eliminate code style violations in a project or solution and ensure a uniform code base.",
  "packageId": "JetBrains.ReSharper.CommandLineTools",
  "tasks": [
    {
      "preProcess": true,
      "customStart": true,
      "settingsClass": {
        "properties": [
          {
            "name": "TargetPath",
            "type": "string",
            "format": "{value}",
            "createOverload": true,
            "help": "Target path."
          },
          {
            "name": "Profile",
            "type": "string",
            "format": "--profile={value}",
            "help": "A code cleanup profile that lists cleanup tasks to execute.<p/>By default, CleanupCode will apply code cleanup tasks specified in the <a href=\"https://www.jetbrains.com/help/resharper/Code_Cleanup__Index.html#profiles\">Built-in: Full Cleanup profile</a>, that is all <a href=\"https://www.jetbrains.com/help/resharper/Code_Cleanup__Index.html#tasks\">available cleanup tasks</a> tasks except <a href=\"https://www.jetbrains.com/help/resharper/File_Header_Style.html\">updating file header</a>. "
          },
          {
            "name": "Include",
            "type": "List<string>",
            "format": "--include={value}",
            "separator": ";",
            "help": "Relative path(s) or wildcards that define the files to include/exclude during the cleanup. If both <c>--include</c> and <c>--exclude</c> are defined and cover the same set of files, <c>--exclude</c> will have higher priority. To specify multiple paths or wildcards, separate them with the semicolon or use the <c>--include</c>/<c>--exclude</c> parameters several times."
          },
          {
            "name": "Exclude",
            "type": "List<string>",
            "format": "--exclude={value}",
            "separator": ";",
            "help": "Relative path(s) or wildcards that define the files to include/exclude during the cleanup. If both <c>--include</c> and <c>--exclude</c> are defined and cover the same set of files, <c>--exclude</c> will have higher priority. To specify multiple paths or wildcards, separate them with the semicolon or use the <c>--include</c>/<c>--exclude</c> parameters several times."
          },
          {
            "name": "Properties",
            "type": "Dictionary<string, string>",
            "format": "--properties={value}",
            "itemFormat": "{key}={value}",
            "help": "lets you override MSBuild properties. You can set each property separately ( <c>--properties:prop1=val1</c> <c>--properties:prop2=val2</c>), or use a semicolon to separate multiple properties <c>--properties:prop1=val1;prop2=val2</c>.<para/>Note that the semicolon cannot be used inside values, for example: <c>--properties:ReferencePath=\"r:\\reference1\\;r:\\reference2\\\"</c>. In such cases, add each value separately using another <c>--properties</c> parameter â€” the values will be combined.<para/>The specified properties are applied to all analyzed projects. Currently, there is no direct way to set a property to a specific project only. The workaround is to create a custom property in this project and assign it to the desired property, then use the custom property in CleanupCode parameters."
          },
          {
            "name": "Toolset",
            "type": "CleanupCodeMSBuildToolset",
            "format": "--toolset={value}",
            "help": "Use this option to specify the exact MSBuild version. For example 12.0: <c>--toolset=12.0</c>. By default the highest available MSBuild version is used. This option might not work if you have several installations with the same version, for example 16.0 from Visual Studio 2019 and 16.0 from .NET Core 3.x."
          },
          {
            "name": "ToolsetPath",
            "type": "string",
            "format": "--toolset-path={value}",
            "help": "Use this option to specify the exact path to MSBuild. This might be helpful if you have a custom MSBuild installation and want to use it with CleanupCode, for example: <c>--toolset-path=\"C:\\tools\\msbuild\\bin\\MsBuild.exe\"</c>"
          },
          {
            "name": "DotNetCore",
            "type": "string",
            "format": "--dotnetcore={value}",
            "help": "By default, .NET Core installation is auto-detected. You can use this option to point to the specific .NET Core installation if the auto-detection results in a conflict. Use it without arguments to ignore .NET Core. Example: <c>--dotnetcore=/usr/local/share/dotnet/dotnet</c>."
          },
          {
            "name": "DotNetCoreSdk",
            "type": "string",
            "format": "--dotnetcoresdk={value}",
            "help": "Use this option to specify .NET Core SDK version that should provide MSBuild. For example, if you have installed .NET Core with SDKs 2.0.3 and 3.0.100, CleanupCode will prefer 3.0.100 (the latest, including preview versions). Now if you want to run CleanupCode with .NET Core SDK 2.0.3, add <c>--dotnetcoresdk=2.0.3</c> to the command line."
          },
          {
            "name": "MonoPath",
            "type": "string",
            "format": "--mono={value}",
            "help": "Mono path. Empty to ignore Mono. Not specified for autodetect. Example: <c>--mono=/Library/Frameworks/Mono.framework/Versions/Current/bin/mono.</c>"
          },
          {
            "name": "ReferenceTargets",
            "type": "List<string>",
            "format": "--targets-for-references={value}",
            "separator": ";",
            "help": "Names of custom MSBuild targets that will be executed to get referenced assemblies of projects. The targets are defined either in the project file or in the <c>.targets</c> file. Multiple values are separated with the semicolon. For example, <c>--targets-for-references=\"GetReferences\"</c>."
          },
          {
            "name": "ItemTargets",
            "type": "List<string>",
            "format": "--targets-for-items={value}",
            "separator": ";",
            "help": "Names of custom MSBuild targets that will be executed to get other items (for example, a Compile item) of projects. The targets are defined either in the project file or in the <c>.targets</c> file. Multiple values are separated with the semicolon. For example, <c>--targets-for-items=\"GetCompileItems\"</c>."
          },
          {
            "name": "CachesHome",
            "type": "string",
            "format": "--caches-home={value}",
            "help": "Lets you specify a custom location for the data that CleanupCode caches. By default, the <em>%LOCALAPPDATA%</em> directory is used, unless there are settings files, in which case the one specified there is used. This parameter can be helpful if you want to use a fast SSD disk for the cache or if you want to store all your build processing data in a single place."
          },
          {
            "name": "Plugins",
            "type": "Dictionary<string, string>",
            "noArgument": true,
            "help": "Allows adding ReSharper plugins that will get included during code cleanup. To add a plugin, specify its ID and version. Available plugins are listed in the <a href=\"https://resharper-plugins.jetbrains.com/\">Plugin Repository</a>. The ID can be grabbed from the download URL. Using <c>CleanupCodePluginLatest</c> or <c>null</c> will download the latest version."
          },
          {
            "name": "DisableSettingsLayers",
            "type": "List<CleanupCodeSettingsLayers>",
            "format": "--disable-settings-layers={value}",
            "separator": ";",
            "help": "Disables specified <a href=\"https://www.jetbrains.com/help/resharper/Sharing_Configuration_Options.html#layers\">settings layers</a>. Accepted values: <c>GlobalAll</c>, <c>GlobalPerProduct</c>, <c>SolutionShared</c>, <c>SolutionPersonal</c>."
          },
          {
            "name": "NoBuiltinSettings",
            "type": "bool",
            "format": "--no-buildin-settings",
            "help": "Suppresses global, solution and project settings profile usage. Equivalent to using <c>--disable-settings-layers: GlobalAll; GlobalPerProduct; SolutionShared; SolutionPersonal; ProjectShared; ProjectPersonal</c>"
          }
        ]
      }
    }
  ],
  "enumerations": [
    {
      "name": "CleanupCodeSettingsLayers",
      "values": [
        "GlobalAll",
        "GlobalPerProduct",
        "SolutionShared",
        "SolutionPersonal"
      ]
    },
    {
      "name": "CleanupCodeMSBuildToolset",
      "values": [
        "12.0",
        "14.0",
        "15.0",
        "16.0"
      ]
    }
  ]
}